{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brads\\\\memory_app\\\\my-frontend\\\\src\\\\pages\\\\InsightsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport KeywordAnalysis from '../components/KeywordAnalysis';\nimport SentimentAnalysis from '../components/SentimentAnalysis';\nimport MediaAnalysisOverview from '../components/MediaAnalysisOverview';\nimport EntryTimeline from '../components/EntryTimeline';\nimport { useUser } from '../UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Insights = () => {\n  _s();\n  const {\n    user\n  } = useUser();\n  const [entries, setEntries] = useState([]);\n  const [keywords, setKeywords] = useState([]);\n  const [mediaAnalysis, setMediaAnalysis] = useState([]);\n  useEffect(() => {\n    const fetchEntries = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/journal-entries/${user.username}`);\n        if (response.ok) {\n          const data = await response.json();\n          setEntries(data);\n          // Aggregate keywords and media analysis results\n          const allKeywords = data.flatMap(entry => entry.metadata.keywords);\n          setKeywords(allKeywords);\n          const allMediaAnalysis = data.map(entry => entry.mediaAnalysis || {\n            labels: [],\n            texts: []\n          });\n          setMediaAnalysis(allMediaAnalysis);\n        }\n      } catch (error) {\n        console.error('Error fetching journal entries:', error);\n      }\n    };\n    fetchEntries();\n  }, [user.username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KeywordAnalysis, {\n      keywords: keywords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SentimentAnalysis, {\n      entries: entries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MediaAnalysisOverview, {\n      mediaAnalysis: mediaAnalysis\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EntryTimeline, {\n      entries: entries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Insights, \"ntBdMPH2v0NmJ3EnwQJAe8pnpeY=\", false, function () {\n  return [useUser];\n});\n_c = Insights;\nexport default Insights;\nvar _c;\n$RefreshReg$(_c, \"Insights\");","map":{"version":3,"names":["React","useEffect","useState","KeywordAnalysis","SentimentAnalysis","MediaAnalysisOverview","EntryTimeline","useUser","jsxDEV","_jsxDEV","Insights","_s","user","entries","setEntries","keywords","setKeywords","mediaAnalysis","setMediaAnalysis","fetchEntries","response","fetch","username","ok","data","json","allKeywords","flatMap","entry","metadata","allMediaAnalysis","map","labels","texts","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/brads/memory_app/my-frontend/src/pages/InsightsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport KeywordAnalysis from '../components/KeywordAnalysis';\r\nimport SentimentAnalysis from '../components/SentimentAnalysis';\r\nimport MediaAnalysisOverview from '../components/MediaAnalysisOverview';\r\nimport EntryTimeline from '../components/EntryTimeline';\r\nimport { useUser } from '../UserContext';\r\n\r\nconst Insights = () => {\r\n  const { user } = useUser();\r\n  const [entries, setEntries] = useState([]);\r\n  const [keywords, setKeywords] = useState([]);\r\n  const [mediaAnalysis, setMediaAnalysis] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchEntries = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3001/journal-entries/${user.username}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setEntries(data);\r\n          // Aggregate keywords and media analysis results\r\n          const allKeywords = data.flatMap(entry => entry.metadata.keywords);\r\n          setKeywords(allKeywords);\r\n          const allMediaAnalysis = data.map(entry => entry.mediaAnalysis || { labels: [], texts: [] });\r\n          setMediaAnalysis(allMediaAnalysis);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching journal entries:', error);\r\n      }\r\n    };\r\n\r\n    fetchEntries();\r\n  }, [user.username]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Insights</h1>\r\n      <KeywordAnalysis keywords={keywords} />\r\n      <SentimentAnalysis entries={entries} />\r\n      <MediaAnalysisOverview mediaAnalysis={mediaAnalysis} />\r\n      <EntryTimeline entries={entries} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Insights;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,qBAAqB,MAAM,qCAAqC;AACvE,OAAOC,aAAa,MAAM,6BAA6B;AACvD,SAASC,OAAO,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAK,CAAC,GAAGL,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,MAAMkB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyCT,IAAI,CAACU,QAAQ,EAAE,CAAC;QACtF,IAAIF,QAAQ,CAACG,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;UAClCX,UAAU,CAACU,IAAI,CAAC;UAChB;UACA,MAAME,WAAW,GAAGF,IAAI,CAACG,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAACd,QAAQ,CAAC;UAClEC,WAAW,CAACU,WAAW,CAAC;UACxB,MAAMI,gBAAgB,GAAGN,IAAI,CAACO,GAAG,CAACH,KAAK,IAAIA,KAAK,CAACX,aAAa,IAAI;YAAEe,MAAM,EAAE,EAAE;YAAEC,KAAK,EAAE;UAAG,CAAC,CAAC;UAC5Ff,gBAAgB,CAACY,gBAAgB,CAAC;QACpC;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAEDf,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACP,IAAI,CAACU,QAAQ,CAAC,CAAC;EAEnB,oBACEb,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB/B,OAAA,CAACN,eAAe;MAACY,QAAQ,EAAEA;IAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvC/B,OAAA,CAACL,iBAAiB;MAACS,OAAO,EAAEA;IAAQ;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvC/B,OAAA,CAACJ,qBAAqB;MAACY,aAAa,EAAEA;IAAc;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvD/B,OAAA,CAACH,aAAa;MAACO,OAAO,EAAEA;IAAQ;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CApCID,QAAQ;EAAA,QACKH,OAAO;AAAA;AAAAkC,EAAA,GADpB/B,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}