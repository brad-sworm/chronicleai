{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brads\\\\memory_app\\\\my-frontend\\\\src\\\\pages\\\\JournalEntryPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport JournalEntry from '../components/JournalEntry';\nimport '../styles/JournalEntryPage.css'; // Make sure the CSS file is imported\nimport { useUser } from '../UserContext'; // Import user context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JournalEntryPage = () => {\n  _s();\n  const {\n    user\n  } = useUser(); // Use the user context\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"journal-entry-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"journal-entry-title\",\n      children: \"Journal Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), !user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"bold-header\",\n        children: \"To create a journal entry:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"normal-header\",\n        children: \"Simply type your text or \\\"start listening\\\" to make documenting your entry easy. Click \\\"extract metadata\\\" when done. Upload any media you have. Gen AI will populate keywords, names, metadata from your content but you can also edit the tags before submitting. Click submit at the bottom of the page to finish.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(JournalEntry, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(JournalEntryPage, \"Q+JCVIy3JH0MXpFK+vm68eAxsAY=\", false, function () {\n  return [useUser];\n});\n_c = JournalEntryPage;\nexport default JournalEntryPage;\nvar _c;\n$RefreshReg$(_c, \"JournalEntryPage\");","map":{"version":3,"names":["React","JournalEntry","useUser","jsxDEV","_jsxDEV","JournalEntryPage","_s","user","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/brads/memory_app/my-frontend/src/pages/JournalEntryPage.js"],"sourcesContent":["import React from 'react';\r\nimport JournalEntry from '../components/JournalEntry';\r\nimport '../styles/JournalEntryPage.css'; // Make sure the CSS file is imported\r\nimport { useUser } from '../UserContext'; // Import user context\r\n\r\nconst JournalEntryPage = () => {\r\n  const { user } = useUser(); // Use the user context\r\n\r\n  return (\r\n    <div className=\"journal-entry-page\">\r\n      <h1 className=\"journal-entry-title\">Journal Entry</h1>\r\n\r\n      {!user && (\r\n        <div className=\"card-container\">\r\n          <h4 className=\"bold-header\">To create a journal entry:</h4>\r\n          <h4 className=\"normal-header\">Simply type your text or \"start listening\" to make documenting your entry easy. Click \"extract metadata\" when done. Upload any media you have. Gen AI will populate keywords, names, metadata from your content but you can also edit the tags before submitting. Click submit at the bottom of the page to finish.</h4>\r\n        </div>\r\n      )}\r\n\r\n      <JournalEntry />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JournalEntryPage;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAO,gCAAgC,CAAC,CAAC;AACzC,SAASC,OAAO,QAAQ,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM;IAAEC;EAAK,CAAC,GAAGL,OAAO,CAAC,CAAC,CAAC,CAAC;;EAE5B,oBACEE,OAAA;IAAKI,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCL,OAAA;MAAII,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAErD,CAACN,IAAI,iBACJH,OAAA;MAAKI,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BL,OAAA;QAAII,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3DT,OAAA;QAAII,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAmT;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnV,CACN,eAEDT,OAAA,CAACH,YAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAACP,EAAA,CAjBID,gBAAgB;EAAA,QACHH,OAAO;AAAA;AAAAY,EAAA,GADpBT,gBAAgB;AAmBtB,eAAeA,gBAAgB;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}