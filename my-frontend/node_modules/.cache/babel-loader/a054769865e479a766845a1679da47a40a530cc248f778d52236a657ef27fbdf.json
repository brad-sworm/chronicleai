{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brads\\\\memory_app\\\\my-frontend\\\\src\\\\components\\\\MediaUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaUpload = ({\n  onMediaSelect\n}) => {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const handleFileChange = event => {\n    const files = Array.from(event.target.files);\n    setSelectedFiles(files);\n    onMediaSelect(files); // Notify parent component of selected files\n\n    // Send each file to the server for analysis\n    files.forEach(uploadAndAnalyzeMedia);\n  };\n  const uploadAndAnalyzeMedia = async file => {\n    const formData = new FormData();\n    formData.append('media', file);\n    try {\n      const response = await fetch('http://localhost:3001/analyze-video', {\n        // Ensure this matches your API endpoint\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Analysis result:', result);\n      } else {\n        console.error('Failed to analyze media');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px 0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Media\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*,audio/*,video/*\",\n      multiple: true,\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px'\n      },\n      children: selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Selected File: \", file.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), file.type.startsWith('image/') && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(file),\n          alt: \"Selected\",\n          style: {\n            maxWidth: '200px',\n            maxHeight: '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 50\n        }, this), file.type.startsWith('audio/') && /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: URL.createObjectURL(file)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 50\n        }, this), file.type.startsWith('video/') && /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          src: URL.createObjectURL(file),\n          style: {\n            maxWidth: '200px',\n            maxHeight: '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 50\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(MediaUpload, \"6iJwk1gH4hB0xa84T6RYQXjKu58=\");\n_c = MediaUpload;\nexport default MediaUpload;\nvar _c;\n$RefreshReg$(_c, \"MediaUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MediaUpload","onMediaSelect","_s","selectedFiles","setSelectedFiles","handleFileChange","event","files","Array","from","target","forEach","uploadAndAnalyzeMedia","file","formData","FormData","append","response","fetch","method","body","ok","result","json","console","log","error","style","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","multiple","onChange","length","marginTop","map","index","marginBottom","name","startsWith","src","URL","createObjectURL","alt","maxWidth","maxHeight","controls","_c","$RefreshReg$"],"sources":["C:/Users/brads/memory_app/my-frontend/src/components/MediaUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst MediaUpload = ({ onMediaSelect }) => {\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleFileChange = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    setSelectedFiles(files);\r\n    onMediaSelect(files); // Notify parent component of selected files\r\n\r\n    // Send each file to the server for analysis\r\n    files.forEach(uploadAndAnalyzeMedia);\r\n  };\r\n\r\n  const uploadAndAnalyzeMedia = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append('media', file);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3001/analyze-video', { // Ensure this matches your API endpoint\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        console.log('Analysis result:', result);\r\n      } else {\r\n        console.error('Failed to analyze media');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: '20px 0' }}>\r\n      <h2>Upload Media</h2>\r\n      <input type=\"file\" accept=\"image/*,audio/*,video/*\" multiple onChange={handleFileChange} />\r\n      {selectedFiles.length > 0 && (\r\n        <div style={{ marginTop: '10px' }}>\r\n          {selectedFiles.map((file, index) => (\r\n            <div key={index} style={{ marginBottom: '10px' }}>\r\n              <p>Selected File: {file.name}</p>\r\n              {file.type.startsWith('image/') && <img src={URL.createObjectURL(file)} alt=\"Selected\" style={{ maxWidth: '200px', maxHeight: '200px' }} />}\r\n              {file.type.startsWith('audio/') && <audio controls src={URL.createObjectURL(file)} />}\r\n              {file.type.startsWith('video/') && <video controls src={URL.createObjectURL(file)} style={{ maxWidth: '200px', maxHeight: '200px' }} />}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MediaUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}