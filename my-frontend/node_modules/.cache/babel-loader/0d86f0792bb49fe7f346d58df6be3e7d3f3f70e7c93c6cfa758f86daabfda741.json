{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brads\\\\memory_app\\\\my-frontend\\\\src\\\\components\\\\KeywordAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\n\n// Registering necessary Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\nconst KeywordAnalysis = ({\n  journalEntries\n}) => {\n  _s();\n  const [keywordCounts, setKeywordCounts] = useState({});\n\n  // Function to count keyword occurrences in the journal entries\n  const countKeywords = entries => {\n    const keywordCount = {};\n\n    // Loop through each journal entry and its keywords\n    entries.forEach(entry => {\n      entry.metadata.keywords.forEach(keyword => {\n        // Increment keyword count or initialize it if not present\n        keywordCount[keyword] = (keywordCount[keyword] || 0) + 1;\n      });\n    });\n    return keywordCount;\n  };\n  useEffect(() => {\n    if (journalEntries && journalEntries.length > 0) {\n      const counts = countKeywords(journalEntries);\n      setKeywordCounts(counts);\n    }\n  }, [journalEntries]);\n\n  // Prepare chart data\n  const keywords = Object.keys(keywordCounts);\n  const counts = keywords.map(keyword => keywordCounts[keyword]);\n  const chartData = {\n    labels: keywords,\n    datasets: [{\n      label: 'Keyword Count',\n      data: counts,\n      backgroundColor: 'rgba(255, 99, 132, 0.6)',\n      // Negative sentiment color\n      borderColor: 'rgba(255, 99, 132, 1)',\n      borderWidth: 1\n    }]\n  };\n\n  // Chart options configuration\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Keyword Analysis'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(KeywordAnalysis, \"AqJug+jtV6xQ+sG0vXNYdhSNlkU=\");\n_c = KeywordAnalysis;\nexport default KeywordAnalysis;\nvar _c;\n$RefreshReg$(_c, \"KeywordAnalysis\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","ChartJS","BarElement","CategoryScale","LinearScale","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","KeywordAnalysis","journalEntries","_s","keywordCounts","setKeywordCounts","countKeywords","entries","keywordCount","forEach","entry","metadata","keywords","keyword","length","counts","Object","keys","map","chartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","options","responsive","plugins","legend","display","title","text","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/brads/memory_app/my-frontend/src/components/KeywordAnalysis.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Registering necessary Chart.js components\r\nChartJS.register(BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\r\n\r\nconst KeywordAnalysis = ({ journalEntries }) => {\r\n  const [keywordCounts, setKeywordCounts] = useState({});\r\n  \r\n  // Function to count keyword occurrences in the journal entries\r\n  const countKeywords = (entries) => {\r\n    const keywordCount = {};\r\n\r\n    // Loop through each journal entry and its keywords\r\n    entries.forEach((entry) => {\r\n      entry.metadata.keywords.forEach((keyword) => {\r\n        // Increment keyword count or initialize it if not present\r\n        keywordCount[keyword] = (keywordCount[keyword] || 0) + 1;\r\n      });\r\n    });\r\n\r\n    return keywordCount;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (journalEntries && journalEntries.length > 0) {\r\n      const counts = countKeywords(journalEntries);\r\n      setKeywordCounts(counts);\r\n    }\r\n  }, [journalEntries]);\r\n\r\n  // Prepare chart data\r\n  const keywords = Object.keys(keywordCounts);\r\n  const counts = keywords.map((keyword) => keywordCounts[keyword]);\r\n\r\n  const chartData = {\r\n    labels: keywords,\r\n    datasets: [\r\n      {\r\n        label: 'Keyword Count',\r\n        data: counts,\r\n        backgroundColor: 'rgba(255, 99, 132, 0.6)', // Negative sentiment color\r\n        borderColor: 'rgba(255, 99, 132, 1)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Chart options configuration\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Keyword Analysis',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Rendering the Bar chart */}\r\n      <Bar data={chartData} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KeywordAnalysis;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SACEC,KAAK,IAAIC,OAAO,EAChBC,UAAU,EACVC,aAAa,EACbC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAR,OAAO,CAACS,QAAQ,CAACR,UAAU,EAAEC,aAAa,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEhF,MAAMI,eAAe,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEtD;EACA,MAAMkB,aAAa,GAAIC,OAAO,IAAK;IACjC,MAAMC,YAAY,GAAG,CAAC,CAAC;;IAEvB;IACAD,OAAO,CAACE,OAAO,CAAEC,KAAK,IAAK;MACzBA,KAAK,CAACC,QAAQ,CAACC,QAAQ,CAACH,OAAO,CAAEI,OAAO,IAAK;QAC3C;QACAL,YAAY,CAACK,OAAO,CAAC,GAAG,CAACL,YAAY,CAACK,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;MAC1D,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAOL,YAAY;EACrB,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACd,IAAIe,cAAc,IAAIA,cAAc,CAACY,MAAM,GAAG,CAAC,EAAE;MAC/C,MAAMC,MAAM,GAAGT,aAAa,CAACJ,cAAc,CAAC;MAC5CG,gBAAgB,CAACU,MAAM,CAAC;IAC1B;EACF,CAAC,EAAE,CAACb,cAAc,CAAC,CAAC;;EAEpB;EACA,MAAMU,QAAQ,GAAGI,MAAM,CAACC,IAAI,CAACb,aAAa,CAAC;EAC3C,MAAMW,MAAM,GAAGH,QAAQ,CAACM,GAAG,CAAEL,OAAO,IAAKT,aAAa,CAACS,OAAO,CAAC,CAAC;EAEhE,MAAMM,SAAS,GAAG;IAChBC,MAAM,EAAER,QAAQ;IAChBS,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,eAAe;MACtBC,IAAI,EAAER,MAAM;MACZS,eAAe,EAAE,yBAAyB;MAAE;MAC5CC,WAAW,EAAE,uBAAuB;MACpCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;;EAED;EACA,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,OAAO,EAAE;MACX,CAAC;MACDC,KAAK,EAAE;QACLD,OAAO,EAAE,IAAI;QACbE,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,oBACElC,OAAA;IAAAmC,QAAA,eAEEnC,OAAA,CAACV,GAAG;MAACkC,IAAI,EAAEJ,SAAU;MAACQ,OAAO,EAAEA;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACnC,EAAA,CA9DIF,eAAe;AAAAsC,EAAA,GAAftC,eAAe;AAgErB,eAAeA,eAAe;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}