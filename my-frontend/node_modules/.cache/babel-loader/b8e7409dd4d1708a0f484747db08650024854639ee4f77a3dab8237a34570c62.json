{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brads\\\\memory_app\\\\my-frontend\\\\src\\\\pages\\\\InsightsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport KeywordAnalysis from '../components/KeywordAnalysis';\nimport SentimentAnalysis from '../components/SentimentAnalysis';\nimport EntryTimelineWithHeatmaps from '../components/EntryTimeline';\nimport { useUser } from '../UserContext';\nimport '../styles/Insights.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Insights = () => {\n  _s();\n  const {\n    user\n  } = useUser();\n  const [entries, setEntries] = useState([]);\n  const [keywords, setKeywords] = useState([]);\n  const [mediaAnalysis, setMediaAnalysis] = useState([]);\n  const [summary, setSummary] = useState('');\n  const [strategy, setStrategy] = useState('');\n  const generateSummary = () => {\n    const positiveCount = mediaAnalysis.filter(entry => entry.labels.includes('Positive')).length;\n    const negativeCount = mediaAnalysis.filter(entry => entry.labels.includes('Negative')).length;\n    if (negativeCount > positiveCount) {\n      return 'Your recent entries show a tendency towards negative sentiment. Let’s work on improving this!';\n    } else if (positiveCount > negativeCount) {\n      return 'Your recent entries show a positive sentiment trend. Keep it up!';\n    } else {\n      return 'Your sentiment is balanced. Continue maintaining your emotional health!';\n    }\n  };\n  const fetchStrategies = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/strategies', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sentiment: 'negative'\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setStrategy(data.strategy);\n      } else {\n        console.error('Failed to fetch strategies');\n      }\n    } catch (error) {\n      console.error('Error fetching strategies:', error);\n    }\n  };\n  useEffect(() => {\n    if (user) {\n      const fetchEntries = async () => {\n        try {\n          const response = await fetch(`http://localhost:3001/journal-entries/${user.username}`);\n          if (response.ok) {\n            const data = await response.json();\n            setEntries(data);\n            const allKeywords = data.flatMap(entry => entry.metadata.keywords);\n            setKeywords(allKeywords);\n            const allMediaAnalysis = data.map(entry => entry.mediaAnalysis || {\n              labels: [],\n              texts: []\n            });\n            setMediaAnalysis(allMediaAnalysis);\n          }\n        } catch (error) {\n          console.error('Error fetching journal entries:', error);\n        }\n      };\n      fetchEntries();\n    }\n  }, [user]);\n  useEffect(() => {\n    if (entries.length) {\n      const computedSummary = generateSummary();\n      setSummary(computedSummary);\n      if (computedSummary.includes('negative')) {\n        fetchStrategies();\n      }\n    }\n  }, [entries]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"insights-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-container\",\n      children: [summary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), strategy && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"strategy\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recommended Strategy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: strategy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"insights-title\",\n      children: \"Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: /*#__PURE__*/_jsxDEV(KeywordAnalysis, {\n        keywords: keywords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: /*#__PURE__*/_jsxDEV(SentimentAnalysis, {\n        entries: entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: /*#__PURE__*/_jsxDEV(EntryTimelineWithHeatmaps, {\n        entries: entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Insights, \"K3fr8Xg2XdLqfC4YDCxD79GcrRc=\", false, function () {\n  return [useUser];\n});\n_c = Insights;\nexport default Insights;\nvar _c;\n$RefreshReg$(_c, \"Insights\");","map":{"version":3,"names":["React","useEffect","useState","KeywordAnalysis","SentimentAnalysis","EntryTimelineWithHeatmaps","useUser","jsxDEV","_jsxDEV","Insights","_s","user","entries","setEntries","keywords","setKeywords","mediaAnalysis","setMediaAnalysis","summary","setSummary","strategy","setStrategy","generateSummary","positiveCount","filter","entry","labels","includes","length","negativeCount","fetchStrategies","response","fetch","method","headers","body","JSON","stringify","sentiment","ok","data","json","console","error","fetchEntries","username","allKeywords","flatMap","metadata","allMediaAnalysis","map","texts","computedSummary","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/brads/memory_app/my-frontend/src/pages/InsightsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport KeywordAnalysis from '../components/KeywordAnalysis';\r\nimport SentimentAnalysis from '../components/SentimentAnalysis';\r\nimport EntryTimelineWithHeatmaps from '../components/EntryTimeline';\r\nimport { useUser } from '../UserContext';\r\nimport '../styles/Insights.css';\r\n\r\nconst Insights = () => {\r\n  const { user } = useUser();\r\n  const [entries, setEntries] = useState([]);\r\n  const [keywords, setKeywords] = useState([]);\r\n  const [mediaAnalysis, setMediaAnalysis] = useState([]);\r\n  const [summary, setSummary] = useState('');\r\n  const [strategy, setStrategy] = useState('');\r\n\r\n  const generateSummary = () => {\r\n    const positiveCount = mediaAnalysis.filter(entry => entry.labels.includes('Positive')).length;\r\n    const negativeCount = mediaAnalysis.filter(entry => entry.labels.includes('Negative')).length;\r\n\r\n    if (negativeCount > positiveCount) {\r\n      return 'Your recent entries show a tendency towards negative sentiment. Let’s work on improving this!';\r\n    } else if (positiveCount > negativeCount) {\r\n      return 'Your recent entries show a positive sentiment trend. Keep it up!';\r\n    } else {\r\n      return 'Your sentiment is balanced. Continue maintaining your emotional health!';\r\n    }\r\n  };\r\n\r\n  const fetchStrategies = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/strategies', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ sentiment: 'negative' }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setStrategy(data.strategy);\r\n      } else {\r\n        console.error('Failed to fetch strategies');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching strategies:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const fetchEntries = async () => {\r\n        try {\r\n          const response = await fetch(`http://localhost:3001/journal-entries/${user.username}`);\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setEntries(data);\r\n\r\n            const allKeywords = data.flatMap(entry => entry.metadata.keywords);\r\n            setKeywords(allKeywords);\r\n\r\n            const allMediaAnalysis = data.map(entry => entry.mediaAnalysis || { labels: [], texts: [] });\r\n            setMediaAnalysis(allMediaAnalysis);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching journal entries:', error);\r\n        }\r\n      };\r\n\r\n      fetchEntries();\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (entries.length) {\r\n      const computedSummary = generateSummary();\r\n      setSummary(computedSummary);\r\n\r\n      if (computedSummary.includes('negative')) {\r\n        fetchStrategies();\r\n      }\r\n    }\r\n  }, [entries]);\r\n\r\n  return (\r\n    <div className=\"insights-container\">\r\n      <div className=\"summary-container\">\r\n        {summary && (\r\n          <div className=\"summary\">\r\n            <h2>Summary</h2>\r\n            <p>{summary}</p>\r\n          </div>\r\n        )}\r\n        {strategy && (\r\n          <div className=\"strategy\">\r\n            <h3>Recommended Strategy</h3>\r\n            <p>{strategy}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <h1 className=\"insights-title\">Insights</h1>\r\n      <div className=\"card-container\">\r\n        <KeywordAnalysis keywords={keywords} />\r\n      </div>\r\n      <div className=\"card-container\">\r\n        <SentimentAnalysis entries={entries} />\r\n      </div>\r\n      <div className=\"card-container\">\r\n        <EntryTimelineWithHeatmaps entries={entries} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Insights;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}