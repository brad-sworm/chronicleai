{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brads\\\\memory_app\\\\my-frontend\\\\src\\\\pages\\\\InsightsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport KeywordAnalysis from '../components/KeywordAnalysis';\nimport SentimentAnalysis from '../components/SentimentAnalysis';\nimport EntryTimelineWithHeatmaps from '../components/EntryTimeline';\nimport axios from 'axios';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport { useUser } from '../UserContext';\nimport '../styles/Insights.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Insights = () => {\n  _s();\n  const {\n    user\n  } = useUser();\n  const [entries, setEntries] = useState([]);\n  const [keywords, setKeywords] = useState([]);\n  const [mediaAnalysis, setMediaAnalysis] = useState([]);\n  const [summary, setSummary] = useState('');\n  const [mentalHealthStrategy, setMentalHealthStrategy] = useState({\n    mainStrategy: '',\n    steps: [],\n    externalResources: []\n  });\n  const [strategies, setStrategies] = useState([]);\n  const [isStrategyVisible, setIsStrategyVisible] = useState(false); // State for toggling strategy visibility\n\n  const API_URL = 'http://localhost:3001';\n  const defaultEntries = [{\n    text: \"Had a fantastic day at work! Got a promotion, feeling on top of the world. Excited for the future!\",\n    metadata: {\n      keywords: ['work', 'promotion', 'excited', 'future']\n    },\n    mediaAnalysis: {\n      labels: ['Negative', 'Neutral'],\n      texts: ['Overwhelmed', 'Frustrated']\n    }\n  }, {\n    text: \"It's been a tough week. Struggling with personal issues, feeling a bit lost and overwhelmed.\",\n    metadata: {\n      keywords: ['tough', 'personal', 'struggling', 'overwhelmed']\n    },\n    mediaAnalysis: {\n      labels: ['Negative', 'Neutral'],\n      texts: ['Frustrated', 'Stressed']\n    }\n  }, {\n    text: \"Work was okay today. Not much happened, just the usual. Nothing too exciting or frustrating.\",\n    metadata: {\n      keywords: ['work', 'usual', 'okay', 'average']\n    },\n    mediaAnalysis: {\n      labels: ['Negative', 'Neutral'],\n      texts: ['Indifferent', 'Stressed']\n    }\n  }];\n  useEffect(() => {\n    if (user) {\n      const fetchEntries = async () => {\n        try {\n          const response = await fetch(`${API_URL}/journal-entries/${user.username}`);\n          if (response.ok) {\n            const data = await response.json();\n            setEntries(data);\n            aggregateData(data);\n          }\n        } catch (error) {\n          console.error('Error fetching journal entries:', error);\n        }\n      };\n      fetchEntries();\n    } else {\n      setEntries(defaultEntries);\n      aggregateData(defaultEntries);\n    }\n  }, [user]);\n  const aggregateData = data => {\n    const allKeywords = data.flatMap(entry => entry.metadata.keywords);\n    const allMediaAnalysis = data.map(entry => entry.mediaAnalysis || {\n      labels: [],\n      texts: []\n    });\n    setKeywords(allKeywords);\n    setMediaAnalysis(allMediaAnalysis);\n    const sentiments = allMediaAnalysis.flatMap(analysis => analysis.labels);\n    const positiveCount = sentiments.filter(label => label === 'Positive').length;\n    const negativeCount = sentiments.filter(label => label === 'Negative').length;\n    const neutralCount = sentiments.filter(label => label === 'Neutral').length;\n    let sentimentSummary = 'Mixed emotions were observed.';\n    if (positiveCount > negativeCount && positiveCount > neutralCount) {\n      sentimentSummary = 'Most entries indicate positive emotions.';\n    } else if (negativeCount > positiveCount && negativeCount > neutralCount) {\n      sentimentSummary = 'Many entries indicate negative emotions.';\n    } else if (neutralCount > positiveCount && neutralCount > negativeCount) {\n      sentimentSummary = 'The entries are mostly neutral.';\n    }\n    setSummary(sentimentSummary);\n    fetchMentalHealthStrategy(sentimentSummary.toLowerCase());\n  };\n  const fetchMentalHealthStrategy = async sentiment => {\n    try {\n      const response = await axios.post(`${API_URL}/api/strategies`, {\n        sentiment\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.data) {\n        const {\n          strategy,\n          steps,\n          externalResources\n        } = response.data;\n        setMentalHealthStrategy({\n          mainStrategy: strategy || 'No strategy available.',\n          steps: steps || [],\n          externalResources: externalResources || []\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching mental health strategy:', error);\n      setMentalHealthStrategy({\n        mainStrategy: 'Unable to fetch strategy.',\n        steps: [],\n        externalResources: []\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"insights-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"insights-title\",\n      children: \"Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), !user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Your data will look something like this:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sign in to see personalized insights based on your entries.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), mentalHealthStrategy.mainStrategy && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container mental-health-strategy-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"strategy-title\",\n        children: \"Suggested Mental Health Strategy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"strategy-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"strategy-main\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Strategy:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: mentalHealthStrategy.mainStrategy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), mentalHealthStrategy.steps.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"strategy-steps\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Actionable Steps:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"steps-list\",\n            children: mentalHealthStrategy.steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Step \", index + 1, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 23\n              }, this), \" \", step]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), mentalHealthStrategy.externalResources.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"external-resources\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"External Resources:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"resources-list\",\n            children: mentalHealthStrategy.externalResources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: resource.url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: resource.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: /*#__PURE__*/_jsxDEV(KeywordAnalysis, {\n        keywords: keywords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: /*#__PURE__*/_jsxDEV(SentimentAnalysis, {\n        entries: entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: /*#__PURE__*/_jsxDEV(EntryTimelineWithHeatmaps, {\n        entries: entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(Insights, \"X+o2wUthwkGF3UsdK5HfXV23f4A=\", false, function () {\n  return [useUser];\n});\n_c = Insights;\nexport default Insights;\nvar _c;\n$RefreshReg$(_c, \"Insights\");","map":{"version":3,"names":["React","useEffect","useState","KeywordAnalysis","SentimentAnalysis","EntryTimelineWithHeatmaps","axios","useUser","jsxDEV","_jsxDEV","Insights","_s","user","entries","setEntries","keywords","setKeywords","mediaAnalysis","setMediaAnalysis","summary","setSummary","mentalHealthStrategy","setMentalHealthStrategy","mainStrategy","steps","externalResources","strategies","setStrategies","isStrategyVisible","setIsStrategyVisible","API_URL","defaultEntries","text","metadata","labels","texts","fetchEntries","response","fetch","username","ok","data","json","aggregateData","error","console","allKeywords","flatMap","entry","allMediaAnalysis","map","sentiments","analysis","positiveCount","filter","label","length","negativeCount","neutralCount","sentimentSummary","fetchMentalHealthStrategy","toLowerCase","sentiment","post","headers","strategy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","step","index","resource","href","url","target","rel","name","_c","$RefreshReg$"],"sources":["C:/Users/brads/memory_app/my-frontend/src/pages/InsightsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport KeywordAnalysis from '../components/KeywordAnalysis';\r\nimport SentimentAnalysis from '../components/SentimentAnalysis';\r\nimport EntryTimelineWithHeatmaps from '../components/EntryTimeline';\r\nimport axios from 'axios';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\nimport { useUser } from '../UserContext';\r\nimport '../styles/Insights.css';\r\n\r\nconst Insights = () => {\r\n  const { user } = useUser();\r\n  const [entries, setEntries] = useState([]);\r\n  const [keywords, setKeywords] = useState([]);\r\n  const [mediaAnalysis, setMediaAnalysis] = useState([]);\r\n  const [summary, setSummary] = useState('');\r\n  const [mentalHealthStrategy, setMentalHealthStrategy] = useState({\r\n    mainStrategy: '',\r\n    steps: [],\r\n    externalResources: [],\r\n  });\r\n  const [strategies, setStrategies] = useState([]);\r\n  const [isStrategyVisible, setIsStrategyVisible] = useState(false); // State for toggling strategy visibility\r\n\r\n  const API_URL = 'http://localhost:3001';\r\n\r\n  const defaultEntries = [\r\n    {\r\n      text: \"Had a fantastic day at work! Got a promotion, feeling on top of the world. Excited for the future!\",\r\n      metadata: { keywords: ['work', 'promotion', 'excited', 'future'] },\r\n      mediaAnalysis: { labels: ['Negative', 'Neutral'], texts: ['Overwhelmed', 'Frustrated'] },\r\n    },\r\n    {\r\n      text: \"It's been a tough week. Struggling with personal issues, feeling a bit lost and overwhelmed.\",\r\n      metadata: { keywords: ['tough', 'personal', 'struggling', 'overwhelmed'] },\r\n      mediaAnalysis: { labels: ['Negative', 'Neutral'], texts: ['Frustrated', 'Stressed'] },\r\n    },\r\n    {\r\n      text: \"Work was okay today. Not much happened, just the usual. Nothing too exciting or frustrating.\",\r\n      metadata: { keywords: ['work', 'usual', 'okay', 'average'] },\r\n      mediaAnalysis: { labels: ['Negative', 'Neutral'], texts: ['Indifferent', 'Stressed'] },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const fetchEntries = async () => {\r\n        try {\r\n          const response = await fetch(`${API_URL}/journal-entries/${user.username}`);\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setEntries(data);\r\n            aggregateData(data);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching journal entries:', error);\r\n        }\r\n      };\r\n\r\n      fetchEntries();\r\n    } else {\r\n      setEntries(defaultEntries);\r\n      aggregateData(defaultEntries);\r\n    }\r\n  }, [user]);\r\n\r\n  const aggregateData = (data) => {\r\n    const allKeywords = data.flatMap((entry) => entry.metadata.keywords);\r\n    const allMediaAnalysis = data.map((entry) => entry.mediaAnalysis || { labels: [], texts: [] });\r\n\r\n    setKeywords(allKeywords);\r\n    setMediaAnalysis(allMediaAnalysis);\r\n\r\n    const sentiments = allMediaAnalysis.flatMap((analysis) => analysis.labels);\r\n    const positiveCount = sentiments.filter((label) => label === 'Positive').length;\r\n    const negativeCount = sentiments.filter((label) => label === 'Negative').length;\r\n    const neutralCount = sentiments.filter((label) => label === 'Neutral').length;\r\n\r\n    let sentimentSummary = 'Mixed emotions were observed.';\r\n    if (positiveCount > negativeCount && positiveCount > neutralCount) {\r\n      sentimentSummary = 'Most entries indicate positive emotions.';\r\n    } else if (negativeCount > positiveCount && negativeCount > neutralCount) {\r\n      sentimentSummary = 'Many entries indicate negative emotions.';\r\n    } else if (neutralCount > positiveCount && neutralCount > negativeCount) {\r\n      sentimentSummary = 'The entries are mostly neutral.';\r\n    }\r\n\r\n    setSummary(sentimentSummary);\r\n\r\n    fetchMentalHealthStrategy(sentimentSummary.toLowerCase());\r\n  };\r\n\r\n  const fetchMentalHealthStrategy = async (sentiment) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${API_URL}/api/strategies`,\r\n        { sentiment },\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      );\r\n\r\n      if (response.data) {\r\n        const { strategy, steps, externalResources } = response.data;\r\n        setMentalHealthStrategy({\r\n          mainStrategy: strategy || 'No strategy available.',\r\n          steps: steps || [],\r\n          externalResources: externalResources || [],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching mental health strategy:', error);\r\n      setMentalHealthStrategy({ mainStrategy: 'Unable to fetch strategy.', steps: [], externalResources: [] });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"insights-container\">\r\n      <h1 className=\"insights-title\">Insights</h1>\r\n\r\n      {!user && (\r\n        <div className=\"card-container\">\r\n          <h4>Your data will look something like this:</h4>\r\n          <p>Sign in to see personalized insights based on your entries.</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Mental Health Strategy Section */}\r\n      {mentalHealthStrategy.mainStrategy && (\r\n        <div className=\"card-container mental-health-strategy-container\">\r\n          <h2 className=\"strategy-title\">Suggested Mental Health Strategy</h2>\r\n          <div className=\"strategy-content\">\r\n            <div className=\"strategy-main\">\r\n              <h3>Strategy:</h3>\r\n              <p>{mentalHealthStrategy.mainStrategy}</p>\r\n            </div>\r\n\r\n            {mentalHealthStrategy.steps.length > 0 && (\r\n              <div className=\"strategy-steps\">\r\n                <h3>Actionable Steps:</h3>\r\n                <ul className=\"steps-list\">\r\n                  {mentalHealthStrategy.steps.map((step, index) => (\r\n                    <li key={index}>\r\n                      <strong>Step {index + 1}:</strong> {step}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n\r\n            {mentalHealthStrategy.externalResources.length > 0 && (\r\n              <div className=\"external-resources\">\r\n                <h3>External Resources:</h3>\r\n                <ul className=\"resources-list\">\r\n                  {mentalHealthStrategy.externalResources.map((resource, index) => (\r\n                    <li key={index}>\r\n                      <a href={resource.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        {resource.name}\r\n                      </a>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Keyword Analysis */}\r\n      <div className=\"card-container\">\r\n        <KeywordAnalysis keywords={keywords} />\r\n      </div>\r\n\r\n      {/* Sentiment Analysis */}\r\n      <div className=\"card-container\">\r\n        <SentimentAnalysis entries={entries} />\r\n      </div>\r\n\r\n      {/* Timeline Analysis */}\r\n      <div className=\"card-container\">\r\n        <EntryTimelineWithHeatmaps entries={entries} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Insights;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}