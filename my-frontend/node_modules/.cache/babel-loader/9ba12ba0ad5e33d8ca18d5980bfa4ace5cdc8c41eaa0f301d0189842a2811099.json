{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brads\\\\memory_app\\\\my-frontend\\\\src\\\\components\\\\JournalEntry.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MediaUpload from './MediaUpload';\nimport SpeechToText from './SpeechToText';\nimport { useUser } from '../UserContext'; // Ensure this is correctly imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JournalEntry = () => {\n  _s();\n  const {\n    user\n  } = useUser(); // Access user dynamically\n  const [text, setText] = useState('');\n  const [metadata, setMetadata] = useState({\n    startTime: null,\n    endTime: null,\n    duration: null,\n    date: null,\n    keywords: [],\n    names: []\n  });\n  const [selectedMedia, setSelectedMedia] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [message, setMessage] = useState('');\n  const handleTextChange = (textData, metadataData) => {\n    setText(textData);\n    setMetadata(metadataData);\n  };\n  const handleMediaSelect = files => {\n    setSelectedMedia(files);\n  };\n  const handleSubmit = async () => {\n    setIsSubmitting(true);\n    setMessage('');\n    if (!user || !user.id) {\n      setMessage('User ID is missing. Please log in again.');\n      setIsSubmitting(false);\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('text', text);\n      formData.append('metadata', JSON.stringify(metadata));\n      selectedMedia.forEach(file => {\n        formData.append('media', file);\n      });\n      formData.append('user', user.id); // Dynamically add the user ID\n\n      const response = await fetch('http://localhost:3001/journal-entries', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to submit journal entry');\n      }\n      const data = await response.json();\n      setMessage('Journal entry submitted successfully!');\n      console.log('Submission response:', data);\n    } catch (error) {\n      console.error('Error submitting journal entry:', error.message);\n      setMessage('An error occurred while submitting your entry.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Journal Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpeechToText, {\n      onTextChange: handleTextChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MediaUpload, {\n      onMediaSelect: handleMediaSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: isSubmitting,\n      children: isSubmitting ? 'Submitting...' : 'Submit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(JournalEntry, \"L+FPkVGx4XK56oqyD2pTq4xm8/U=\", false, function () {\n  return [useUser];\n});\n_c = JournalEntry;\nexport default JournalEntry;\nvar _c;\n$RefreshReg$(_c, \"JournalEntry\");","map":{"version":3,"names":["React","useState","MediaUpload","SpeechToText","useUser","jsxDEV","_jsxDEV","JournalEntry","_s","user","text","setText","metadata","setMetadata","startTime","endTime","duration","date","keywords","names","selectedMedia","setSelectedMedia","isSubmitting","setIsSubmitting","message","setMessage","handleTextChange","textData","metadataData","handleMediaSelect","files","handleSubmit","id","formData","FormData","append","JSON","stringify","forEach","file","response","fetch","method","body","ok","Error","data","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onTextChange","onMediaSelect","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/brads/memory_app/my-frontend/src/components/JournalEntry.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport MediaUpload from './MediaUpload';\r\nimport SpeechToText from './SpeechToText';\r\nimport { useUser } from '../UserContext'; // Ensure this is correctly imported\r\n\r\nconst JournalEntry = () => {\r\n  const { user } = useUser(); // Access user dynamically\r\n  const [text, setText] = useState('');\r\n  const [metadata, setMetadata] = useState({\r\n    startTime: null,\r\n    endTime: null,\r\n    duration: null,\r\n    date: null,\r\n    keywords: [],\r\n    names: [],\r\n  });\r\n  const [selectedMedia, setSelectedMedia] = useState([]);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleTextChange = (textData, metadataData) => {\r\n    setText(textData);\r\n    setMetadata(metadataData);\r\n  };\r\n\r\n  const handleMediaSelect = (files) => {\r\n    setSelectedMedia(files);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    setIsSubmitting(true);\r\n    setMessage('');\r\n\r\n    if (!user || !user.id) {\r\n      setMessage('User ID is missing. Please log in again.');\r\n      setIsSubmitting(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('text', text);\r\n      formData.append('metadata', JSON.stringify(metadata));\r\n      selectedMedia.forEach((file) => {\r\n        formData.append('media', file);\r\n      });\r\n      formData.append('user', user.id); // Dynamically add the user ID\r\n\r\n      const response = await fetch('http://localhost:3001/journal-entries', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to submit journal entry');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setMessage('Journal entry submitted successfully!');\r\n      console.log('Submission response:', data);\r\n    } catch (error) {\r\n      console.error('Error submitting journal entry:', error.message);\r\n      setMessage('An error occurred while submitting your entry.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create Journal Entry</h2>\r\n      <SpeechToText onTextChange={handleTextChange} />\r\n      <MediaUpload onMediaSelect={handleMediaSelect} />\r\n      <button onClick={handleSubmit} disabled={isSubmitting}>\r\n        {isSubmitting ? 'Submitting...' : 'Submit'}\r\n      </button>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JournalEntry;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}