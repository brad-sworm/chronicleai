{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brads\\\\memory_app\\\\my-frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useUser } from '../UserContext';\nimport JournalEntryTable from '../components/JournalEntryTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  console.log('Dashboard component rendering'); // Add this log\n  const {\n    user\n  } = useUser();\n  console.log('User data:', user); // Add this log to verify the user object\n  const [journalEntries, setJournalEntries] = useState([]);\n  useEffect(() => {\n    const fetchJournalEntries = async () => {\n      if (user && user.id) {\n        try {\n          const response = await fetch(`http://localhost:3001/journal-entries/${user.id}`);\n          if (!response.ok) {\n            throw new Error('Failed to fetch journal entries');\n          }\n          const data = await response.json();\n          console.log('Journal Entries from Backend:', data); // Log the journal entries data\n          setJournalEntries(data);\n        } catch (error) {\n          console.error(error.message);\n        }\n      }\n    };\n    fetchJournalEntries();\n  }, [user]);\n  // Add 'user' as a dependency to ensure the effect re-runs when 'user' changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", user === null || user === void 0 ? void 0 : user.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(JournalEntryTable, {\n      journalEntries: journalEntries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"X7DFqMyxfJ8iS4xC8SmBBsjEeUQ=\", false, function () {\n  return [useUser];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useUser","JournalEntryTable","jsxDEV","_jsxDEV","Dashboard","_s","console","log","user","journalEntries","setJournalEntries","fetchJournalEntries","id","response","fetch","ok","Error","data","json","error","message","children","username","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/brads/memory_app/my-frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useUser } from '../UserContext';\r\nimport JournalEntryTable from '../components/JournalEntryTable';\r\n\r\nconst Dashboard = () => {\r\n    console.log('Dashboard component rendering'); // Add this log\r\n    const { user } = useUser();\r\n    console.log('User data:', user); // Add this log to verify the user object\r\n    const [journalEntries, setJournalEntries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchJournalEntries = async () => {\r\n      if (user && user.id) {\r\n        try {\r\n          const response = await fetch(`http://localhost:3001/journal-entries/${user.id}`);\r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch journal entries');\r\n          }\r\n          const data = await response.json();\r\n          console.log('Journal Entries from Backend:', data); // Log the journal entries data\r\n          setJournalEntries(data);\r\n        } catch (error) {\r\n          console.error(error.message);\r\n        }\r\n      }\r\n    };\r\n  \r\n    fetchJournalEntries();\r\n  }, [user]);\r\n   // Add 'user' as a dependency to ensure the effect re-runs when 'user' changes\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome, {user?.username}</h1>\r\n      <p>User ID: {user?.id}</p> {/* Ensure the ID is displayed */}\r\n      {/* Render other data based on the user */}\r\n      <JournalEntryTable journalEntries={journalEntries} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,gBAAgB;AACxC,OAAOC,iBAAiB,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpBC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAAC,CAAC;EAC9C,MAAM;IAAEC;EAAK,CAAC,GAAGR,OAAO,CAAC,CAAC;EAC1BM,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEC,IAAI,CAAC,CAAC,CAAC;EACjC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACd,MAAMa,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAIH,IAAI,IAAIA,IAAI,CAACI,EAAE,EAAE;QACnB,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyCN,IAAI,CAACI,EAAE,EAAE,CAAC;UAChF,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;UACpD;UACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;UAClCZ,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEU,IAAI,CAAC,CAAC,CAAC;UACpDP,iBAAiB,CAACO,IAAI,CAAC;QACzB,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdb,OAAO,CAACa,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;QAC9B;MACF;IACF,CAAC;IAEDT,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EACT;;EAED,oBACEL,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,GAAI,WAAS,EAACb,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEc,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClCvB,OAAA;MAAAkB,QAAA,GAAG,WAAS,EAACb,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,EAAE;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC,eAE3BvB,OAAA,CAACF,iBAAiB;MAACQ,cAAc,EAAEA;IAAe;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAACrB,EAAA,CAnCID,SAAS;EAAA,QAEMJ,OAAO;AAAA;AAAA2B,EAAA,GAFtBvB,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}