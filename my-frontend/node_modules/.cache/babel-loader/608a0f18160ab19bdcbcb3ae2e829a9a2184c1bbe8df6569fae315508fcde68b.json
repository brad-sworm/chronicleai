{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brads\\\\memory_app\\\\my-frontend\\\\src\\\\components\\\\JournalEntry.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SpeechToText from './SpeechToText';\nimport MediaUpload from './MediaUpload';\nimport { useUser } from '../UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JournalEntry = () => {\n  _s();\n  const {\n    user\n  } = useUser();\n  const [metadata, setMetadata] = useState({\n    startTime: null,\n    endTime: null,\n    duration: null,\n    date: '',\n    keywords: [],\n    names: [],\n    text: ''\n  });\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const handleMetadataChange = updatedMetadata => {\n    console.log('Metadata received from SpeechToText:', updatedMetadata);\n    const formattedMetadata = {\n      ...updatedMetadata,\n      date: updatedMetadata.date ? new Date(updatedMetadata.date).toISOString().split('T')[0] : ''\n    };\n    setMetadata(formattedMetadata);\n  };\n  const handleMediaSelect = files => {\n    console.log('Selected files:', files);\n    setSelectedFiles(files);\n  };\n  useEffect(() => {\n    if (metadata.endTime) {\n      const currentDate = new Date(metadata.endTime).toISOString().split('T')[0];\n      setMetadata(prevMetadata => ({\n        ...prevMetadata,\n        date: currentDate\n      }));\n    }\n  }, [metadata.endTime]);\n  const handleSubmit = async () => {\n    const formattedMetadata = {\n      ...metadata,\n      date: metadata.date ? new Date(metadata.date).toISOString().split('T')[0] : '',\n      startTime: metadata.startTime ? new Date(metadata.startTime).toISOString() : null,\n      endTime: metadata.endTime ? new Date(metadata.endTime).toISOString() : null\n    };\n    const formData = new FormData();\n    formData.append('user', user.username);\n    formData.append('text', metadata.text);\n    formData.append('metadata', JSON.stringify(formattedMetadata));\n    selectedFiles.forEach(file => {\n      formData.append('media', file);\n    });\n    try {\n      const response = await fetch('http://localhost:3001/journal-entries', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        console.log('Journal entry saved successfully');\n      } else {\n        console.error('Failed to save journal entry');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SpeechToText, {\n      onMetadataChange: handleMetadataChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MediaUpload, {\n      onMediaSelect: handleMediaSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'left',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(JournalEntry, \"Ed27FviHWVVg2lZg0l9pTYrK4kc=\", false, function () {\n  return [useUser];\n});\n_c = JournalEntry;\nexport default JournalEntry;\nvar _c;\n$RefreshReg$(_c, \"JournalEntry\");","map":{"version":3,"names":["React","useState","useEffect","SpeechToText","MediaUpload","useUser","jsxDEV","_jsxDEV","JournalEntry","_s","user","metadata","setMetadata","startTime","endTime","duration","date","keywords","names","text","selectedFiles","setSelectedFiles","handleMetadataChange","updatedMetadata","console","log","formattedMetadata","Date","toISOString","split","handleMediaSelect","files","currentDate","prevMetadata","handleSubmit","formData","FormData","append","username","JSON","stringify","forEach","file","response","fetch","method","body","ok","error","children","onMetadataChange","fileName","_jsxFileName","lineNumber","columnNumber","onMediaSelect","style","textAlign","marginTop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/brads/memory_app/my-frontend/src/components/JournalEntry.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SpeechToText from './SpeechToText';\r\nimport MediaUpload from './MediaUpload';\r\nimport { useUser } from '../UserContext';\r\n\r\nconst JournalEntry = () => {\r\n  const { user } = useUser();\r\n  const [metadata, setMetadata] = useState({\r\n    startTime: null,\r\n    endTime: null,\r\n    duration: null,\r\n    date: '',\r\n    keywords: [],\r\n    names: [],\r\n    text: '',\r\n  });\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleMetadataChange = (updatedMetadata) => {\r\n    console.log('Metadata received from SpeechToText:', updatedMetadata);\r\n    const formattedMetadata = {\r\n      ...updatedMetadata,\r\n      date: updatedMetadata.date ? new Date(updatedMetadata.date).toISOString().split('T')[0] : '',\r\n    };\r\n    setMetadata(formattedMetadata);\r\n  };\r\n\r\n  const handleMediaSelect = (files) => {\r\n    console.log('Selected files:', files);\r\n    setSelectedFiles(files);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (metadata.endTime) {\r\n      const currentDate = new Date(metadata.endTime).toISOString().split('T')[0];\r\n      setMetadata((prevMetadata) => ({\r\n        ...prevMetadata,\r\n        date: currentDate,\r\n      }));\r\n    }\r\n  }, [metadata.endTime]);\r\n\r\n  const handleSubmit = async () => {\r\n    const formattedMetadata = {\r\n      ...metadata,\r\n      date: metadata.date ? new Date(metadata.date).toISOString().split('T')[0] : '',\r\n      startTime: metadata.startTime ? new Date(metadata.startTime).toISOString() : null,\r\n      endTime: metadata.endTime ? new Date(metadata.endTime).toISOString() : null,\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append('user', user.username);\r\n    formData.append('text', metadata.text);\r\n    formData.append('metadata', JSON.stringify(formattedMetadata));\r\n\r\n    selectedFiles.forEach((file) => {\r\n      formData.append('media', file);\r\n    });\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3001/journal-entries', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      if (response.ok) {\r\n        console.log('Journal entry saved successfully');\r\n      } else {\r\n        console.error('Failed to save journal entry');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SpeechToText onMetadataChange={handleMetadataChange} />\r\n      <MediaUpload onMediaSelect={handleMediaSelect} />\r\n      <div style={{ textAlign: 'left', marginTop: '20px' }}>\r\n        <button onClick={handleSubmit}>Submit</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JournalEntry;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}