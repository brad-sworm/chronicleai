{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brads\\\\memory_app\\\\my-frontend\\\\src\\\\components\\\\KeywordAnalysis.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend, PointElement } from 'chart.js';\n\n// Registering necessary Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend, PointElement);\nconst KeywordAnalysis = ({\n  keywords\n}) => {\n  // Default data if there are no keywords\n  const defaultKeywords = ['work', 'promotion', 'stressed', 'overwhelmed', 'motivation', 'positive', 'future'];\n  const defaultCounts = [5, 3, 3, 2, 2, 2, 1];\n\n  // Use real keywords or default data\n  const keywordCounts = (keywords.length > 0 ? keywords : defaultKeywords).reduce((acc, keyword) => {\n    acc[keyword] = (acc[keyword] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Sort the keywords by frequency in descending order\n  const sortedKeywords = Object.entries(keywordCounts).sort((a, b) => b[1] - a[1]);\n\n  // Data for the chart\n  const labels = sortedKeywords.map(([keyword]) => keyword);\n  const data = sortedKeywords.map(([, count]) => count);\n\n  // Chart data configuration\n  const chartData = {\n    labels: labels,\n    datasets: [{\n      label: 'Keyword Count',\n      data: data,\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      // Bar color\n      borderColor: 'rgba(75, 192, 192, 1)',\n      // Border color\n      borderWidth: 1\n    }]\n  };\n\n  // Chart options configuration\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Keyword Analysis'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Keyword Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), keywords.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your data will look something like this:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_c = KeywordAnalysis;\nexport default KeywordAnalysis;\nvar _c;\n$RefreshReg$(_c, \"KeywordAnalysis\");","map":{"version":3,"names":["React","Bar","Chart","ChartJS","BarElement","CategoryScale","LinearScale","Title","Tooltip","Legend","PointElement","jsxDEV","_jsxDEV","register","KeywordAnalysis","keywords","defaultKeywords","defaultCounts","keywordCounts","length","reduce","acc","keyword","sortedKeywords","Object","entries","sort","a","b","labels","map","data","count","chartData","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","plugins","legend","display","title","text","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/brads/memory_app/my-frontend/src/components/KeywordAnalysis.js"],"sourcesContent":["import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  PointElement,\r\n} from 'chart.js';\r\n\r\n// Registering necessary Chart.js components\r\nChartJS.register(BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend, PointElement);\r\n\r\nconst KeywordAnalysis = ({ keywords }) => {\r\n  // Default data if there are no keywords\r\n  const defaultKeywords = [\r\n    'work', 'promotion', 'stressed', 'overwhelmed', 'motivation', 'positive', 'future',\r\n  ];\r\n  const defaultCounts = [5, 3, 3, 2, 2, 2, 1];\r\n\r\n  // Use real keywords or default data\r\n  const keywordCounts = (keywords.length > 0 ? keywords : defaultKeywords).reduce((acc, keyword) => {\r\n    acc[keyword] = (acc[keyword] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  // Sort the keywords by frequency in descending order\r\n  const sortedKeywords = Object.entries(keywordCounts).sort((a, b) => b[1] - a[1]);\r\n\r\n  // Data for the chart\r\n  const labels = sortedKeywords.map(([keyword]) => keyword);\r\n  const data = sortedKeywords.map(([, count]) => count);\r\n\r\n  // Chart data configuration\r\n  const chartData = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: 'Keyword Count',\r\n        data: data,\r\n        backgroundColor: 'rgba(75, 192, 192, 0.6)', // Bar color\r\n        borderColor: 'rgba(75, 192, 192, 1)',       // Border color\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Chart options configuration\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Keyword Analysis',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Keyword Analysis</h3>\r\n      {keywords.length === 0 && (\r\n        <p>Your data will look something like this:</p>\r\n      )}\r\n      {/* Rendering the Bar chart */}\r\n      <Bar data={chartData} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KeywordAnalysis;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SACEC,KAAK,IAAIC,OAAO,EAChBC,UAAU,EACVC,aAAa,EACbC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,YAAY,QACP,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAT,OAAO,CAACU,QAAQ,CAACT,UAAU,EAAEC,aAAa,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,YAAY,CAAC;AAE9F,MAAMI,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACxC;EACA,MAAMC,eAAe,GAAG,CACtB,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,aAAa,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,CACnF;EACD,MAAMC,aAAa,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;EAE3C;EACA,MAAMC,aAAa,GAAG,CAACH,QAAQ,CAACI,MAAM,GAAG,CAAC,GAAGJ,QAAQ,GAAGC,eAAe,EAAEI,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;IAChGD,GAAG,CAACC,OAAO,CAAC,GAAG,CAACD,GAAG,CAACC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;IACtC,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEN;EACA,MAAME,cAAc,GAAGC,MAAM,CAACC,OAAO,CAACP,aAAa,CAAC,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEhF;EACA,MAAME,MAAM,GAAGN,cAAc,CAACO,GAAG,CAAC,CAAC,CAACR,OAAO,CAAC,KAAKA,OAAO,CAAC;EACzD,MAAMS,IAAI,GAAGR,cAAc,CAACO,GAAG,CAAC,CAAC,GAAGE,KAAK,CAAC,KAAKA,KAAK,CAAC;;EAErD;EACA,MAAMC,SAAS,GAAG;IAChBJ,MAAM,EAAEA,MAAM;IACdK,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,eAAe;MACtBJ,IAAI,EAAEA,IAAI;MACVK,eAAe,EAAE,yBAAyB;MAAE;MAC5CC,WAAW,EAAE,uBAAuB;MAAQ;MAC5CC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;;EAED;EACA,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,OAAO,EAAE;MACX,CAAC;MACDC,KAAK,EAAE;QACLD,OAAO,EAAE,IAAI;QACbE,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,oBACEjC,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MAAAkC,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBnC,QAAQ,CAACI,MAAM,KAAK,CAAC,iBACpBP,OAAA;MAAAkC,QAAA,EAAG;IAAwC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC/C,eAEDtC,OAAA,CAACX,GAAG;MAAC8B,IAAI,EAAEE,SAAU;MAACM,OAAO,EAAEA;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACC,EAAA,GA1DIrC,eAAe;AA4DrB,eAAeA,eAAe;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}