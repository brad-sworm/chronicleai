{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brads\\\\memory_app\\\\my-frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useUser } from '../UserContext';\nimport JournalEntryTable from '../components/JournalEntryTable';\nimport '../styles/Dashboard.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  console.log('Dashboard component rendering');\n  const {\n    user\n  } = useUser();\n  console.log('User data:', user);\n  const [journalEntries, setJournalEntries] = useState([]);\n  useEffect(() => {\n    const fetchJournalEntries = async () => {\n      if (user && user.username) {\n        try {\n          const response = await fetch(`http://localhost:3001/journal-entries/${user.username}`);\n          if (!response.ok) {\n            throw new Error('Failed to fetch journal entries');\n          }\n          const data = await response.json();\n          console.log('Journal Entries from Backend:', data);\n          setJournalEntries(data);\n        } catch (error) {\n          console.error(error.message);\n        }\n      }\n    };\n    fetchJournalEntries();\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"dashboard-title\",\n      children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: /*#__PURE__*/_jsxDEV(JournalEntryTable, {\n        journalEntries: journalEntries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"X7DFqMyxfJ8iS4xC8SmBBsjEeUQ=\", false, function () {\n  return [useUser];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useUser","JournalEntryTable","jsxDEV","_jsxDEV","Dashboard","_s","console","log","user","journalEntries","setJournalEntries","fetchJournalEntries","username","response","fetch","ok","Error","data","json","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/brads/memory_app/my-frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useUser } from '../UserContext';\r\nimport JournalEntryTable from '../components/JournalEntryTable';\r\nimport '../styles/Dashboard.css'; // Import the CSS file\r\n\r\nconst Dashboard = () => {\r\n  console.log('Dashboard component rendering');\r\n  const { user } = useUser();\r\n  console.log('User data:', user);\r\n\r\n  const [journalEntries, setJournalEntries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchJournalEntries = async () => {\r\n      if (user && user.username) {\r\n        try {\r\n          const response = await fetch(`http://localhost:3001/journal-entries/${user.username}`);\r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch journal entries');\r\n          }\r\n          const data = await response.json();\r\n          console.log('Journal Entries from Backend:', data);\r\n          setJournalEntries(data);\r\n        } catch (error) {\r\n          console.error(error.message);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchJournalEntries();\r\n  }, [user]);\r\n\r\n  return (\r\n    \r\n    <div className=\"dashboard-container\">\r\n\r\n      <h1 className=\"dashboard-title\">Welcome, {user?.username}</h1>\r\n      <div className=\"card-container\">\r\n        <JournalEntryTable journalEntries={journalEntries} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,gBAAgB;AACxC,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAO,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtBC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;EAC5C,MAAM;IAAEC;EAAK,CAAC,GAAGR,OAAO,CAAC,CAAC;EAC1BM,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEC,IAAI,CAAC;EAE/B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,MAAMY,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAIH,IAAI,IAAIA,IAAI,CAACI,QAAQ,EAAE;QACzB,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyCN,IAAI,CAACI,QAAQ,EAAE,CAAC;UACtF,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;UACpD;UACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;UAClCZ,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEU,IAAI,CAAC;UAClDP,iBAAiB,CAACO,IAAI,CAAC;QACzB,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdb,OAAO,CAACa,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;QAC9B;MACF;IACF,CAAC;IAEDT,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,oBAEEL,OAAA;IAAKkB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAElCnB,OAAA;MAAIkB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,GAAC,WAAS,EAACd,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,QAAQ;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9DvB,OAAA;MAAKkB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BnB,OAAA,CAACF,iBAAiB;QAACQ,cAAc,EAAEA;MAAe;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrB,EAAA,CArCID,SAAS;EAAA,QAEIJ,OAAO;AAAA;AAAA2B,EAAA,GAFpBvB,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}