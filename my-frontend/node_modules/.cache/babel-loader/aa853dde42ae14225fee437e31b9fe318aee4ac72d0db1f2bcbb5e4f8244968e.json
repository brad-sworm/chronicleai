{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brads\\\\memory_app\\\\my-frontend\\\\src\\\\components\\\\WordCloudComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport WordCloud from 'wordcloud';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordCloudComponent = ({\n  words\n}) => {\n  _s();\n  const wordCloudRef = useRef(null);\n  useEffect(() => {\n    if (wordCloudRef.current) {\n      WordCloud(wordCloudRef.current, {\n        list: words.map(word => [word.text, word.value]),\n        gridSize: 8,\n        weightFactor: 10,\n        fontFamily: 'Times, serif',\n        color: () => `#${Math.floor(Math.random() * 16777215).toString(16)}`,\n        rotateRatio: 0.5,\n        rotationSteps: 2,\n        backgroundColor: '#ffffff'\n      });\n    }\n  }, [words]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: wordCloudRef,\n    width: 600,\n    height: 400\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n_s(WordCloudComponent, \"QjgZE7TAE5OigG+R0Sbet1kwkcU=\");\n_c = WordCloudComponent;\nexport default WordCloudComponent;\nvar _c;\n$RefreshReg$(_c, \"WordCloudComponent\");","map":{"version":3,"names":["React","useEffect","useRef","WordCloud","jsxDEV","_jsxDEV","WordCloudComponent","words","_s","wordCloudRef","current","list","map","word","text","value","gridSize","weightFactor","fontFamily","color","Math","floor","random","toString","rotateRatio","rotationSteps","backgroundColor","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/brads/memory_app/my-frontend/src/components/WordCloudComponent.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport WordCloud from 'wordcloud';\r\n\r\nconst WordCloudComponent = ({ words }) => {\r\n  const wordCloudRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (wordCloudRef.current) {\r\n      WordCloud(wordCloudRef.current, {\r\n        list: words.map(word => [word.text, word.value]),\r\n        gridSize: 8,\r\n        weightFactor: 10,\r\n        fontFamily: 'Times, serif',\r\n        color: () => `#${Math.floor(Math.random()*16777215).toString(16)}`,\r\n        rotateRatio: 0.5,\r\n        rotationSteps: 2,\r\n        backgroundColor: '#ffffff',\r\n      });\r\n    }\r\n  }, [words]);\r\n\r\n  return <canvas ref={wordCloudRef} width={600} height={400}></canvas>;\r\n};\r\n\r\nexport default WordCloudComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,SAAS,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,YAAY,GAAGP,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACd,IAAIQ,YAAY,CAACC,OAAO,EAAE;MACxBP,SAAS,CAACM,YAAY,CAACC,OAAO,EAAE;QAC9BC,IAAI,EAAEJ,KAAK,CAACK,GAAG,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,IAAI,EAAED,IAAI,CAACE,KAAK,CAAC,CAAC;QAChDC,QAAQ,EAAE,CAAC;QACXC,YAAY,EAAE,EAAE;QAChBC,UAAU,EAAE,cAAc;QAC1BC,KAAK,EAAEA,CAAA,KAAM,IAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,QAAQ,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAE;QAClEC,WAAW,EAAE,GAAG;QAChBC,aAAa,EAAE,CAAC;QAChBC,eAAe,EAAE;MACnB,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACnB,KAAK,CAAC,CAAC;EAEX,oBAAOF,OAAA;IAAQsB,GAAG,EAAElB,YAAa;IAACmB,KAAK,EAAE,GAAI;IAACC,MAAM,EAAE;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AACtE,CAAC;AAACzB,EAAA,CAnBIF,kBAAkB;AAAA4B,EAAA,GAAlB5B,kBAAkB;AAqBxB,eAAeA,kBAAkB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}