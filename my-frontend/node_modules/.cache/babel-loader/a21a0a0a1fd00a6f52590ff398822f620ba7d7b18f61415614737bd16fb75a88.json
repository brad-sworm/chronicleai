{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brads\\\\memory_app\\\\my-frontend\\\\src\\\\components\\\\EntryTimeline.js\";\nimport React from 'react';\nimport { HeatMap } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, Title, Tooltip, Legend, BarElement, PointElement, LineElement } from 'chart.js';\nimport { faker } from '@faker-js/faker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, Title, Tooltip, Legend, BarElement, PointElement, LineElement);\nconst categorizeTime = timestamp => {\n  const hour = new Date(timestamp).getHours();\n  return hour < 6 ? '00-06' : hour < 12 ? '06-12' : hour < 18 ? '12-18' : '18-24';\n};\nconst generateSentimentData = entries => {\n  return entries.map(() => Math.floor(Math.random() * 3) - 1); // Generate sentiment data (1, 0, -1)\n};\nconst EntryTimelineWithHeatmaps = ({\n  entries\n}) => {\n  const categorizedEntries = entries.map(entry => categorizeTime(entry.metadata.date));\n\n  // Generate mock sentiment data\n  const sentimentData = generateSentimentData(entries);\n\n  // Prepare heatmap data for entry times\n  const entryTimeHeatmapData = categorizedEntries.reduce((acc, timeSlot) => {\n    acc[timeSlot] = (acc[timeSlot] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Prepare heatmap data for sentiment\n  const sentimentHeatmapData = sentimentData.reduce((acc, sentiment) => {\n    const category = sentiment === 1 ? 'Positive' : sentiment === 0 ? 'Neutral' : 'Negative';\n    acc[category] = (acc[category] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Prepare heatmap chart data\n  const entryTimeChartData = {\n    labels: ['00-06', '06-12', '12-18', '18-24'],\n    datasets: [{\n      label: 'Entries per Time Slot',\n      data: [entryTimeHeatmapData['00-06'] || 0, entryTimeHeatmapData['06-12'] || 0, entryTimeHeatmapData['12-18'] || 0, entryTimeHeatmapData['18-24'] || 0],\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n  const sentimentChartData = {\n    labels: ['Positive', 'Neutral', 'Negative'],\n    datasets: [{\n      label: 'Sentiment Count',\n      data: [sentimentHeatmapData['Positive'] || 0, sentimentHeatmapData['Neutral'] || 0, sentimentHeatmapData['Negative'] || 0],\n      backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(255, 99, 132, 0.6)'],\n      borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 159, 64, 1)', 'rgba(255, 99, 132, 1)'],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Entry Timeline Heatmap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeatMap, {\n      data: entryTimeChartData,\n      options: {\n        responsive: true,\n        plugins: {\n          title: {\n            display: true,\n            text: 'Entries by Time Slot'\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sentiment Heatmap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeatMap, {\n      data: sentimentChartData,\n      options: {\n        responsive: true,\n        plugins: {\n          title: {\n            display: true,\n            text: 'Sentiment Distribution'\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_c = EntryTimelineWithHeatmaps;\nexport default EntryTimelineWithHeatmaps;\nvar _c;\n$RefreshReg$(_c, \"EntryTimelineWithHeatmaps\");","map":{"version":3,"names":["React","HeatMap","Chart","ChartJS","CategoryScale","LinearScale","Title","Tooltip","Legend","BarElement","PointElement","LineElement","faker","jsxDEV","_jsxDEV","register","categorizeTime","timestamp","hour","Date","getHours","generateSentimentData","entries","map","Math","floor","random","EntryTimelineWithHeatmaps","categorizedEntries","entry","metadata","date","sentimentData","entryTimeHeatmapData","reduce","acc","timeSlot","sentimentHeatmapData","sentiment","category","entryTimeChartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","sentimentChartData","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","plugins","title","display","text","_c","$RefreshReg$"],"sources":["C:/Users/brads/memory_app/my-frontend/src/components/EntryTimeline.js"],"sourcesContent":["import React from 'react';\r\nimport { HeatMap } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, Title, Tooltip, Legend, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport { faker } from '@faker-js/faker';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  BarElement,\r\n  PointElement,\r\n  LineElement\r\n);\r\n\r\nconst categorizeTime = (timestamp) => {\r\n  const hour = new Date(timestamp).getHours();\r\n  return hour < 6\r\n    ? '00-06'\r\n    : hour < 12\r\n    ? '06-12'\r\n    : hour < 18\r\n    ? '12-18'\r\n    : '18-24';\r\n};\r\n\r\nconst generateSentimentData = (entries) => {\r\n  return entries.map(() => Math.floor(Math.random() * 3) - 1); // Generate sentiment data (1, 0, -1)\r\n};\r\n\r\nconst EntryTimelineWithHeatmaps = ({ entries }) => {\r\n  const categorizedEntries = entries.map((entry) => categorizeTime(entry.metadata.date));\r\n\r\n  // Generate mock sentiment data\r\n  const sentimentData = generateSentimentData(entries);\r\n\r\n  // Prepare heatmap data for entry times\r\n  const entryTimeHeatmapData = categorizedEntries.reduce((acc, timeSlot) => {\r\n    acc[timeSlot] = (acc[timeSlot] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  // Prepare heatmap data for sentiment\r\n  const sentimentHeatmapData = sentimentData.reduce((acc, sentiment) => {\r\n    const category = sentiment === 1 ? 'Positive' : sentiment === 0 ? 'Neutral' : 'Negative';\r\n    acc[category] = (acc[category] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  // Prepare heatmap chart data\r\n  const entryTimeChartData = {\r\n    labels: ['00-06', '06-12', '12-18', '18-24'],\r\n    datasets: [\r\n      {\r\n        label: 'Entries per Time Slot',\r\n        data: [entryTimeHeatmapData['00-06'] || 0, entryTimeHeatmapData['06-12'] || 0, entryTimeHeatmapData['12-18'] || 0, entryTimeHeatmapData['18-24'] || 0],\r\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n        borderColor: 'rgba(75, 192, 192, 1)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const sentimentChartData = {\r\n    labels: ['Positive', 'Neutral', 'Negative'],\r\n    datasets: [\r\n      {\r\n        label: 'Sentiment Count',\r\n        data: [\r\n          sentimentHeatmapData['Positive'] || 0,\r\n          sentimentHeatmapData['Neutral'] || 0,\r\n          sentimentHeatmapData['Negative'] || 0,\r\n        ],\r\n        backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(255, 99, 132, 0.6)'],\r\n        borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 159, 64, 1)', 'rgba(255, 99, 132, 1)'],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Entry Timeline Heatmap</h3>\r\n      <HeatMap data={entryTimeChartData} options={{ responsive: true, plugins: { title: { display: true, text: 'Entries by Time Slot' } } }} />\r\n\r\n      <h3>Sentiment Heatmap</h3>\r\n      <HeatMap data={sentimentChartData} options={{ responsive: true, plugins: { title: { display: true, text: 'Sentiment Distribution' } } }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EntryTimelineWithHeatmaps;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}