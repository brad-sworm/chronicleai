{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brads\\\\memory_app\\\\my-frontend\\\\src\\\\components\\\\CombinedAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CombinedAnalysis = ({\n  onMetadataChange\n}) => {\n  _s();\n  const [keywords, setKeywords] = useState([]);\n  const [names, setNames] = useState([]);\n  const fetchKeywordsFromSpeechToText = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/analyze-speech', {\n        method: 'POST'\n      });\n      const data = await response.json();\n      setKeywords(data.keywords);\n      onMetadataChange({\n        keywords: data.keywords\n      });\n    } catch (error) {\n      console.error('Error fetching keywords from speech-to-text:', error);\n    }\n  };\n  const fetchKeywordsFromMedia = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/analyze-media', {\n        method: 'POST'\n      });\n      const data = await response.json();\n      setKeywords(data.keywords);\n      setNames(data.names);\n      onMetadataChange({\n        keywords: data.keywords,\n        names: data.names\n      });\n    } catch (error) {\n      console.error('Error fetching keywords from media:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Combined Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchKeywordsFromSpeechToText,\n      children: \"Fetch Keywords from Speech-to-Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchKeywordsFromMedia,\n      children: \"Fetch Keywords and Names from Media Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Keywords\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: keywords.map((keyword, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: keyword\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Names\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: names.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(CombinedAnalysis, \"dlIoxNGisqJG+lPXKzdhmRSIYaQ=\");\n_c = CombinedAnalysis;\nexport default CombinedAnalysis;\nvar _c;\n$RefreshReg$(_c, \"CombinedAnalysis\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CombinedAnalysis","onMetadataChange","_s","keywords","setKeywords","names","setNames","fetchKeywordsFromSpeechToText","response","fetch","method","data","json","error","console","fetchKeywordsFromMedia","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","keyword","index","name","_c","$RefreshReg$"],"sources":["C:/Users/brads/memory_app/my-frontend/src/components/CombinedAnalysis.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst CombinedAnalysis = ({ onMetadataChange }) => {\r\n  const [keywords, setKeywords] = useState([]);\r\n  const [names, setNames] = useState([]);\r\n\r\n  const fetchKeywordsFromSpeechToText = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/analyze-speech', { method: 'POST' });\r\n      const data = await response.json();\r\n      setKeywords(data.keywords);\r\n      onMetadataChange({ keywords: data.keywords });\r\n    } catch (error) {\r\n      console.error('Error fetching keywords from speech-to-text:', error);\r\n    }\r\n  };\r\n\r\n  const fetchKeywordsFromMedia = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/analyze-media', { method: 'POST' });\r\n      const data = await response.json();\r\n      setKeywords(data.keywords);\r\n      setNames(data.names);\r\n      onMetadataChange({ keywords: data.keywords, names: data.names });\r\n    } catch (error) {\r\n      console.error('Error fetching keywords from media:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Combined Analysis</h2>\r\n      <button onClick={fetchKeywordsFromSpeechToText}>Fetch Keywords from Speech-to-Text</button>\r\n      <button onClick={fetchKeywordsFromMedia}>Fetch Keywords and Names from Media Analysis</button>\r\n      <div>\r\n        <h3>Keywords</h3>\r\n        <ul>\r\n          {keywords.map((keyword, index) => (\r\n            <li key={index}>{keyword}</li>\r\n          ))}\r\n        </ul>\r\n        <h3>Names</h3>\r\n        <ul>\r\n          {names.map((name, index) => (\r\n            <li key={index}>{name}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CombinedAnalysis;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}