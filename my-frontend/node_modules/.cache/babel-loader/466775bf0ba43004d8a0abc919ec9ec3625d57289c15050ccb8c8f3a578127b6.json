{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brads\\\\memory_app\\\\my-frontend\\\\src\\\\pages\\\\InsightsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport KeywordAnalysis from '../components/KeywordAnalysis';\nimport SentimentAnalysis from '../components/SentimentAnalysis';\nimport EntryTimelineWithHeatmaps from '../components/EntryTimeline';\nimport axios from 'axios';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport { useUser } from '../UserContext';\nimport '../styles/Insights.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Insights = () => {\n  _s();\n  const {\n    user\n  } = useUser();\n  const [entries, setEntries] = useState([]);\n  const [keywords, setKeywords] = useState([]);\n  const [mediaAnalysis, setMediaAnalysis] = useState([]);\n  const [summary, setSummary] = useState('');\n  const [strategies, setStrategies] = useState([]);\n  const [mentalHealthStrategy, setMentalHealthStrategy] = useState('');\n  const [isStrategyVisible, setIsStrategyVisible] = useState(false); // State for toggling strategy visibility\n\n  const API_URL = 'http://localhost:3001';\n  const defaultEntries = [{\n    text: \"Had a fantastic day at work! Got a promotion, feeling on top of the world. Excited for the future!\",\n    metadata: {\n      keywords: [\"work\", \"promotion\", \"excited\", \"future\"]\n    },\n    mediaAnalysis: {\n      labels: [\"Negative\", \"Neutral\"],\n      texts: [\"Overwhelmed\", \"Frustrated\"]\n    }\n  }, {\n    text: \"It's been a tough week. Struggling with personal issues, feeling a bit lost and overwhelmed.\",\n    metadata: {\n      keywords: [\"tough\", \"personal\", \"struggling\", \"overwhelmed\"]\n    },\n    mediaAnalysis: {\n      labels: [\"Negative\", \"Neutral\"],\n      texts: [\"Frustrated\", \"Stressed\"]\n    }\n  }, {\n    text: \"Work was okay today. Not much happened, just the usual. Nothing too exciting or frustrating.\",\n    metadata: {\n      keywords: [\"work\", \"usual\", \"okay\", \"average\"]\n    },\n    mediaAnalysis: {\n      labels: [\"Negative\", \"Neutral\"],\n      texts: [\"Indifferent\", \"Stressed\"]\n    }\n  }];\n  useEffect(() => {\n    if (user) {\n      const fetchEntries = async () => {\n        try {\n          const response = await fetch(`${API_URL}/journal-entries/${user.username}`);\n          if (response.ok) {\n            const data = await response.json();\n            setEntries(data);\n            aggregateData(data);\n          }\n        } catch (error) {\n          console.error('Error fetching journal entries:', error);\n        }\n      };\n      fetchEntries();\n    } else {\n      setEntries(defaultEntries);\n      aggregateData(defaultEntries);\n    }\n  }, [user]);\n  const aggregateData = data => {\n    const allKeywords = data.flatMap(entry => entry.metadata.keywords);\n    const allMediaAnalysis = data.map(entry => entry.mediaAnalysis || {\n      labels: [],\n      texts: []\n    });\n    setKeywords(allKeywords);\n    setMediaAnalysis(allMediaAnalysis);\n    const sentiments = allMediaAnalysis.flatMap(analysis => analysis.labels);\n    const positiveCount = sentiments.filter(label => label === 'Positive').length;\n    const negativeCount = sentiments.filter(label => label === 'Negative').length;\n    const neutralCount = sentiments.filter(label => label === 'Neutral').length;\n    let sentimentSummary = 'Mixed emotions were observed.';\n    if (positiveCount > negativeCount && positiveCount > neutralCount) {\n      sentimentSummary = 'Most entries indicate positive emotions.';\n    } else if (negativeCount > positiveCount && negativeCount > neutralCount) {\n      sentimentSummary = 'Many entries indicate negative emotions.';\n    } else if (neutralCount > positiveCount && neutralCount > negativeCount) {\n      sentimentSummary = 'The entries are mostly neutral.';\n    }\n    setSummary(sentimentSummary);\n    fetchMentalHealthStrategy();\n  };\n  const fetchMentalHealthStrategy = async () => {\n    try {\n      const response = await axios.post(`${API_URL}/api/strategies`, {\n        sentiment: 'neutral'\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.data && response.data.strategy) {\n        setMentalHealthStrategy(response.data.strategy);\n      }\n    } catch (error) {\n      console.error('Error fetching mental health strategy:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"insights-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"insights-title\",\n      children: \"Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), !user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Your data will look something like this:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sign in to see personalized insights based on your entries.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), mentalHealthStrategy && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mental-health-strategy-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Suggested Mental Health Strategy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `expander-container ${isStrategyVisible ? 'expanded' : ''}`,\n        onClick: () => setIsStrategyVisible(!isStrategyVisible),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bouncing-icon\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-lightbulb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 9\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }, this), isStrategyVisible ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: mentalHealthStrategy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click here for a strategy to improve your mental health.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 3\n    }, this), strategies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"strategies-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Strategies to Improve Mental Health\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: strategies.map((strategy, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: strategy\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: /*#__PURE__*/_jsxDEV(KeywordAnalysis, {\n        keywords: keywords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: /*#__PURE__*/_jsxDEV(SentimentAnalysis, {\n        entries: entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: /*#__PURE__*/_jsxDEV(EntryTimelineWithHeatmaps, {\n        entries: entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(Insights, \"57Pc9sSJ5xhvHg4KM+OorK8mAgI=\", false, function () {\n  return [useUser];\n});\n_c = Insights;\nexport default Insights;\nvar _c;\n$RefreshReg$(_c, \"Insights\");","map":{"version":3,"names":["React","useEffect","useState","KeywordAnalysis","SentimentAnalysis","EntryTimelineWithHeatmaps","axios","useUser","jsxDEV","_jsxDEV","Insights","_s","user","entries","setEntries","keywords","setKeywords","mediaAnalysis","setMediaAnalysis","summary","setSummary","strategies","setStrategies","mentalHealthStrategy","setMentalHealthStrategy","isStrategyVisible","setIsStrategyVisible","API_URL","defaultEntries","text","metadata","labels","texts","fetchEntries","response","fetch","username","ok","data","json","aggregateData","error","console","allKeywords","flatMap","entry","allMediaAnalysis","map","sentiments","analysis","positiveCount","filter","label","length","negativeCount","neutralCount","sentimentSummary","fetchMentalHealthStrategy","post","sentiment","headers","strategy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","_c","$RefreshReg$"],"sources":["C:/Users/brads/memory_app/my-frontend/src/pages/InsightsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport KeywordAnalysis from '../components/KeywordAnalysis';\r\nimport SentimentAnalysis from '../components/SentimentAnalysis';\r\nimport EntryTimelineWithHeatmaps from '../components/EntryTimeline';\r\nimport axios from 'axios';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\n\r\nimport { useUser } from '../UserContext';\r\nimport '../styles/Insights.css';\r\n\r\nconst Insights = () => {\r\n  const { user } = useUser();\r\n  const [entries, setEntries] = useState([]);\r\n  const [keywords, setKeywords] = useState([]);\r\n  const [mediaAnalysis, setMediaAnalysis] = useState([]);\r\n  const [summary, setSummary] = useState('');\r\n  const [strategies, setStrategies] = useState([]);\r\n  const [mentalHealthStrategy, setMentalHealthStrategy] = useState(''); \r\n  const [isStrategyVisible, setIsStrategyVisible] = useState(false); // State for toggling strategy visibility\r\n\r\n  const API_URL = 'http://localhost:3001'; \r\n\r\n  const defaultEntries = [\r\n    {\r\n      text: \"Had a fantastic day at work! Got a promotion, feeling on top of the world. Excited for the future!\",\r\n      metadata: { keywords: [\"work\", \"promotion\", \"excited\", \"future\"] },\r\n      mediaAnalysis: { labels: [\"Negative\", \"Neutral\"], texts: [\"Overwhelmed\", \"Frustrated\"] },\r\n    },\r\n    {\r\n      text: \"It's been a tough week. Struggling with personal issues, feeling a bit lost and overwhelmed.\",\r\n      metadata: { keywords: [\"tough\", \"personal\", \"struggling\", \"overwhelmed\"] },\r\n      mediaAnalysis: { labels: [\"Negative\", \"Neutral\"], texts: [\"Frustrated\", \"Stressed\"] },\r\n    },\r\n    {\r\n      text: \"Work was okay today. Not much happened, just the usual. Nothing too exciting or frustrating.\",\r\n      metadata: { keywords: [\"work\", \"usual\", \"okay\", \"average\"] },\r\n      mediaAnalysis: { labels: [\"Negative\", \"Neutral\"], texts: [\"Indifferent\", \"Stressed\"] },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const fetchEntries = async () => {\r\n        try {\r\n          const response = await fetch(`${API_URL}/journal-entries/${user.username}`);\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setEntries(data);\r\n            aggregateData(data);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching journal entries:', error);\r\n        }\r\n      };\r\n\r\n      fetchEntries();\r\n    } else {\r\n      setEntries(defaultEntries);\r\n      aggregateData(defaultEntries); \r\n    }\r\n  }, [user]);\r\n\r\n  const aggregateData = (data) => {\r\n    const allKeywords = data.flatMap(entry => entry.metadata.keywords);\r\n    const allMediaAnalysis = data.map(entry => entry.mediaAnalysis || { labels: [], texts: [] });\r\n\r\n    setKeywords(allKeywords);\r\n    setMediaAnalysis(allMediaAnalysis);\r\n\r\n    const sentiments = allMediaAnalysis.flatMap(analysis => analysis.labels);\r\n    const positiveCount = sentiments.filter(label => label === 'Positive').length;\r\n    const negativeCount = sentiments.filter(label => label === 'Negative').length;\r\n    const neutralCount = sentiments.filter(label => label === 'Neutral').length;\r\n\r\n    let sentimentSummary = 'Mixed emotions were observed.';\r\n    if (positiveCount > negativeCount && positiveCount > neutralCount) {\r\n      sentimentSummary = 'Most entries indicate positive emotions.';\r\n    } else if (negativeCount > positiveCount && negativeCount > neutralCount) {\r\n      sentimentSummary = 'Many entries indicate negative emotions.';\r\n    } else if (neutralCount > positiveCount && neutralCount > negativeCount) {\r\n      sentimentSummary = 'The entries are mostly neutral.';\r\n    }\r\n\r\n    setSummary(sentimentSummary);\r\n\r\n    fetchMentalHealthStrategy(); \r\n  };\r\n\r\n  const fetchMentalHealthStrategy = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${API_URL}/api/strategies`, \r\n        { sentiment: 'neutral' },\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      );\r\n\r\n      if (response.data && response.data.strategy) {\r\n        setMentalHealthStrategy(response.data.strategy);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching mental health strategy:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"insights-container\">\r\n      <h1 className=\"insights-title\">Insights</h1>\r\n\r\n      <div className=\"summary-section\">\r\n        <h2>Summary</h2>\r\n        <p>{summary}</p>\r\n      </div>\r\n\r\n      {!user && (\r\n        <div className=\"card-container\">\r\n          <h4>Your data will look something like this:</h4>\r\n          <p>Sign in to see personalized insights based on your entries.</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Mental Health Strategy Section with Expanding Container */}\r\n      {mentalHealthStrategy && (\r\n  <div className=\"mental-health-strategy-section\">\r\n    <h2>Suggested Mental Health Strategy</h2>\r\n    <div \r\n      className={`expander-container ${isStrategyVisible ? 'expanded' : ''}`} \r\n      onClick={() => setIsStrategyVisible(!isStrategyVisible)}\r\n    >\r\n      {/* Updated Icon */}\r\n      <div className=\"bouncing-icon\">\r\n        <i className=\"fas fa-lightbulb\"></i> {/* Font Awesome Light Bulb */}\r\n      </div>\r\n      {isStrategyVisible ? (\r\n        <p>{mentalHealthStrategy}</p>\r\n      ) : (\r\n        <p>Click here for a strategy to improve your mental health.</p>\r\n      )}\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n\r\n      {/* Strategies Section */}\r\n      {strategies.length > 0 && (\r\n        <div className=\"strategies-section\">\r\n          <h2>Strategies to Improve Mental Health</h2>\r\n          <ul>\r\n            {strategies.map((strategy, index) => (\r\n              <li key={index}>{strategy}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {/* Keyword Analysis */}\r\n      <div className=\"card-container\">\r\n        <KeywordAnalysis keywords={keywords} />\r\n      </div>\r\n\r\n      {/* Sentiment Analysis */}\r\n      <div className=\"card-container\">\r\n        <SentimentAnalysis entries={entries} />\r\n      </div>\r\n\r\n      {/* Timeline Analysis */}\r\n      <div className=\"card-container\">\r\n        <EntryTimelineWithHeatmaps entries={entries} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Insights;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,yBAAyB,MAAM,6BAA6B;AACnE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,+CAA+C;AAGtD,SAASC,OAAO,QAAQ,gBAAgB;AACxC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAK,CAAC,GAAGL,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACqB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAACuB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnE,MAAMyB,OAAO,GAAG,uBAAuB;EAEvC,MAAMC,cAAc,GAAG,CACrB;IACEC,IAAI,EAAE,oGAAoG;IAC1GC,QAAQ,EAAE;MAAEf,QAAQ,EAAE,CAAC,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ;IAAE,CAAC;IAClEE,aAAa,EAAE;MAAEc,MAAM,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC;MAAEC,KAAK,EAAE,CAAC,aAAa,EAAE,YAAY;IAAE;EACzF,CAAC,EACD;IACEH,IAAI,EAAE,8FAA8F;IACpGC,QAAQ,EAAE;MAAEf,QAAQ,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,aAAa;IAAE,CAAC;IAC1EE,aAAa,EAAE;MAAEc,MAAM,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC;MAAEC,KAAK,EAAE,CAAC,YAAY,EAAE,UAAU;IAAE;EACtF,CAAC,EACD;IACEH,IAAI,EAAE,8FAA8F;IACpGC,QAAQ,EAAE;MAAEf,QAAQ,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS;IAAE,CAAC;IAC5DE,aAAa,EAAE;MAAEc,MAAM,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC;MAAEC,KAAK,EAAE,CAAC,aAAa,EAAE,UAAU;IAAE;EACvF,CAAC,CACF;EAED/B,SAAS,CAAC,MAAM;IACd,IAAIW,IAAI,EAAE;MACR,MAAMqB,YAAY,GAAG,MAAAA,CAAA,KAAY;QAC/B,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,OAAO,oBAAoBf,IAAI,CAACwB,QAAQ,EAAE,CAAC;UAC3E,IAAIF,QAAQ,CAACG,EAAE,EAAE;YACf,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;YAClCzB,UAAU,CAACwB,IAAI,CAAC;YAChBE,aAAa,CAACF,IAAI,CAAC;UACrB;QACF,CAAC,CAAC,OAAOG,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACzD;MACF,CAAC;MAEDR,YAAY,CAAC,CAAC;IAChB,CAAC,MAAM;MACLnB,UAAU,CAACc,cAAc,CAAC;MAC1BY,aAAa,CAACZ,cAAc,CAAC;IAC/B;EACF,CAAC,EAAE,CAAChB,IAAI,CAAC,CAAC;EAEV,MAAM4B,aAAa,GAAIF,IAAI,IAAK;IAC9B,MAAMK,WAAW,GAAGL,IAAI,CAACM,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACf,QAAQ,CAACf,QAAQ,CAAC;IAClE,MAAM+B,gBAAgB,GAAGR,IAAI,CAACS,GAAG,CAACF,KAAK,IAAIA,KAAK,CAAC5B,aAAa,IAAI;MAAEc,MAAM,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC;IAE5FhB,WAAW,CAAC2B,WAAW,CAAC;IACxBzB,gBAAgB,CAAC4B,gBAAgB,CAAC;IAElC,MAAME,UAAU,GAAGF,gBAAgB,CAACF,OAAO,CAACK,QAAQ,IAAIA,QAAQ,CAAClB,MAAM,CAAC;IACxE,MAAMmB,aAAa,GAAGF,UAAU,CAACG,MAAM,CAACC,KAAK,IAAIA,KAAK,KAAK,UAAU,CAAC,CAACC,MAAM;IAC7E,MAAMC,aAAa,GAAGN,UAAU,CAACG,MAAM,CAACC,KAAK,IAAIA,KAAK,KAAK,UAAU,CAAC,CAACC,MAAM;IAC7E,MAAME,YAAY,GAAGP,UAAU,CAACG,MAAM,CAACC,KAAK,IAAIA,KAAK,KAAK,SAAS,CAAC,CAACC,MAAM;IAE3E,IAAIG,gBAAgB,GAAG,+BAA+B;IACtD,IAAIN,aAAa,GAAGI,aAAa,IAAIJ,aAAa,GAAGK,YAAY,EAAE;MACjEC,gBAAgB,GAAG,0CAA0C;IAC/D,CAAC,MAAM,IAAIF,aAAa,GAAGJ,aAAa,IAAII,aAAa,GAAGC,YAAY,EAAE;MACxEC,gBAAgB,GAAG,0CAA0C;IAC/D,CAAC,MAAM,IAAID,YAAY,GAAGL,aAAa,IAAIK,YAAY,GAAGD,aAAa,EAAE;MACvEE,gBAAgB,GAAG,iCAAiC;IACtD;IAEApC,UAAU,CAACoC,gBAAgB,CAAC;IAE5BC,yBAAyB,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMA,yBAAyB,GAAG,MAAAA,CAAA,KAAY;IAC5C,IAAI;MACF,MAAMvB,QAAQ,GAAG,MAAM5B,KAAK,CAACoD,IAAI,CAC/B,GAAG/B,OAAO,iBAAiB,EAC3B;QAAEgC,SAAS,EAAE;MAAU,CAAC,EACxB;QAAEC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAAE,CACpD,CAAC;MAED,IAAI1B,QAAQ,CAACI,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAACuB,QAAQ,EAAE;QAC3CrC,uBAAuB,CAACU,QAAQ,CAACI,IAAI,CAACuB,QAAQ,CAAC;MACjD;IACF,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE;EACF,CAAC;EAED,oBACEhC,OAAA;IAAKqD,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCtD,OAAA;MAAIqD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE5C1D,OAAA;MAAKqD,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BtD,OAAA;QAAAsD,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChB1D,OAAA;QAAAsD,QAAA,EAAI5C;MAAO;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,EAEL,CAACvD,IAAI,iBACJH,OAAA;MAAKqD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BtD,OAAA;QAAAsD,QAAA,EAAI;MAAwC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjD1D,OAAA;QAAAsD,QAAA,EAAG;MAA2D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CACN,EAGA5C,oBAAoB,iBACzBd,OAAA;MAAKqD,SAAS,EAAC,gCAAgC;MAAAC,QAAA,gBAC7CtD,OAAA;QAAAsD,QAAA,EAAI;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzC1D,OAAA;QACEqD,SAAS,EAAE,sBAAsBrC,iBAAiB,GAAG,UAAU,GAAG,EAAE,EAAG;QACvE2C,OAAO,EAAEA,CAAA,KAAM1C,oBAAoB,CAAC,CAACD,iBAAiB,CAAE;QAAAsC,QAAA,gBAGxDtD,OAAA;UAAKqD,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BtD,OAAA;YAAGqD,SAAS,EAAC;UAAkB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,KAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,EACL1C,iBAAiB,gBAChBhB,OAAA;UAAAsD,QAAA,EAAIxC;QAAoB;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,gBAE7B1D,OAAA;UAAAsD,QAAA,EAAG;QAAwD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC/D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAIM9C,UAAU,CAACgC,MAAM,GAAG,CAAC,iBACpB5C,OAAA;MAAKqD,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCtD,OAAA;QAAAsD,QAAA,EAAI;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5C1D,OAAA;QAAAsD,QAAA,EACG1C,UAAU,CAAC0B,GAAG,CAAC,CAACc,QAAQ,EAAEQ,KAAK,kBAC9B5D,OAAA;UAAAsD,QAAA,EAAiBF;QAAQ,GAAhBQ,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAC/B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN,eAGD1D,OAAA;MAAKqD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BtD,OAAA,CAACN,eAAe;QAACY,QAAQ,EAAEA;MAAS;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eAGN1D,OAAA;MAAKqD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BtD,OAAA,CAACL,iBAAiB;QAACS,OAAO,EAAEA;MAAQ;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eAGN1D,OAAA;MAAKqD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BtD,OAAA,CAACJ,yBAAyB;QAACQ,OAAO,EAAEA;MAAQ;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxD,EAAA,CAhKID,QAAQ;EAAA,QACKH,OAAO;AAAA;AAAA+D,EAAA,GADpB5D,QAAQ;AAkKd,eAAeA,QAAQ;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}