{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brads\\\\memory_app\\\\my-frontend\\\\src\\\\components\\\\JournalEntryTable.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JournalEntryTable = ({\n  journalEntries\n}) => {\n  const constructMediaUrl = filePath => {\n    // Replace backslashes with forward slashes\n    return `http://localhost:3001/${filePath.replace(/\\\\/g, '/')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: styles.table,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Keywords\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Names\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: journalEntries.map(entry => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: new Date(entry.metadata.date).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: entry.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: entry.metadata.keywords.join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: entry.metadata.names.join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: entry.media && entry.media.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [file.match(/\\.(jpeg|jpg|gif|png)$/i) && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: constructMediaUrl(file),\n              alt: \"media\",\n              style: styles.media\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 21\n            }, this), file.match(/\\.(mp3|wav)$/i) && /*#__PURE__*/_jsxDEV(\"audio\", {\n              controls: true,\n              children: /*#__PURE__*/_jsxDEV(\"source\", {\n                src: constructMediaUrl(file),\n                type: \"audio/mpeg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }, this), file.match(/\\.(mp4|mov)$/i) && /*#__PURE__*/_jsxDEV(\"video\", {\n              controls: true,\n              style: styles.media,\n              children: /*#__PURE__*/_jsxDEV(\"source\", {\n                src: constructMediaUrl(file),\n                type: \"video/mp4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, entry._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = JournalEntryTable;\nconst styles = {\n  table: {\n    width: '100%',\n    borderCollapse: 'collapse'\n  },\n  th: {\n    border: '1px solid black',\n    padding: '8px',\n    textAlign: 'left',\n    backgroundColor: '#f2f2f2'\n  },\n  td: {\n    border: '1px solid black',\n    padding: '8px',\n    textAlign: 'left'\n  },\n  media: {\n    maxWidth: '200px',\n    maxHeight: '200px'\n  }\n};\nexport default JournalEntryTable;\nvar _c;\n$RefreshReg$(_c, \"JournalEntryTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","JournalEntryTable","journalEntries","constructMediaUrl","filePath","replace","style","styles","table","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","Date","metadata","date","toLocaleDateString","text","keywords","join","names","media","file","index","match","src","alt","controls","type","_id","_c","width","borderCollapse","th","border","padding","textAlign","backgroundColor","td","maxWidth","maxHeight","$RefreshReg$"],"sources":["C:/Users/brads/memory_app/my-frontend/src/components/JournalEntryTable.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst JournalEntryTable = ({ journalEntries }) => {\r\n  const constructMediaUrl = (filePath) => {\r\n    // Replace backslashes with forward slashes\r\n    return `http://localhost:3001/${filePath.replace(/\\\\/g, '/')}`;\r\n  };\r\n\r\n  return (\r\n    <table style={styles.table}>\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Text</th>\r\n          <th>Keywords</th>\r\n          <th>Names</th>\r\n          <th>Media</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {journalEntries.map((entry) => (\r\n          <tr key={entry._id}>\r\n            <td>{new Date(entry.metadata.date).toLocaleDateString()}</td>\r\n            <td>{entry.text}</td>\r\n            <td>{entry.metadata.keywords.join(', ')}</td>\r\n            <td>{entry.metadata.names.join(', ')}</td>\r\n            <td>\r\n              {entry.media && entry.media.map((file, index) => (\r\n                <div key={index}>\r\n                  {file.match(/\\.(jpeg|jpg|gif|png)$/i) && (\r\n                    <img src={constructMediaUrl(file)} alt=\"media\" style={styles.media} />\r\n                  )}\r\n                  {file.match(/\\.(mp3|wav)$/i) && (\r\n                    <audio controls>\r\n                      <source src={constructMediaUrl(file)} type=\"audio/mpeg\" />\r\n                    </audio>\r\n                  )}\r\n                  {file.match(/\\.(mp4|mov)$/i) && (\r\n                    <video controls style={styles.media}>\r\n                      <source src={constructMediaUrl(file)} type=\"video/mp4\" />\r\n                    </video>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  table: {\r\n    width: '100%',\r\n    borderCollapse: 'collapse',\r\n  },\r\n  th: {\r\n    border: '1px solid black',\r\n    padding: '8px',\r\n    textAlign: 'left',\r\n    backgroundColor: '#f2f2f2',\r\n  },\r\n  td: {\r\n    border: '1px solid black',\r\n    padding: '8px',\r\n    textAlign: 'left',\r\n  },\r\n  media: {\r\n    maxWidth: '200px',\r\n    maxHeight: '200px',\r\n  },\r\n};\r\n\r\nexport default JournalEntryTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}